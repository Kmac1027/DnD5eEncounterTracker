{"version":3,"sources":["Components/Encounter.js","Components/AddToEncounterButton.js","Components/Stats.js","Components/Autocomplete.js","Components/Parent.js","App.js","reportWebVitals.js","index.js"],"names":["Encounter","_ref","addToEncounterArray","_useState","setAddToEncounterArray","useState","_useState2","Object","slicedToArray","react_default","a","createElement","Card","className","style","width","fontSize","Header","as","display","flexWrap","map","monster","i","ListGroup","Item","key","border","borderColor","OverlayTrigger","trigger","placement","overlay","Popover","id","Body","health","Button","variant","height","name","AddToEncounterButton","HP","hitDice","calculateHealth","dice","MaxOrRoll","howManyDice","howManyDiceArray","typeOfDiceArray","additionArray","typeOfDice","addition","j","length","leftOffJ","push","join","includes","parseInt","hpcalc","Math","floor","random","rolledHealth","console","log","addMonsterToEncounter","hp","hitdice","hpAmount","addedMonster","current","concat","toConsumableArray","margin","onClick","Stats","data","size","alignment","monsterType","armor","speed","stats","skills","actions","legendaryActions","savingThrows","XP","CR","senses","languages","specialAbilities","conditionImmunities","damageImmunities","damageResistances","damageVulnerabilities","IMG","d20","setD20","_useState3","_useState4","hit","setHit","_useState5","_useState6","attackBonus","setAttackBonus","_useState7","_useState8","damage","setDamage","_useState9","_useState10","damageTotal","setDamageTotal","_useState11","_useState12","attackNameHit","setAttackNameHit","_useState13","_useState14","attackNameDamage","setAttackNameDamage","_useState15","_useState16","statCheck","setStatCheck","_useState17","_useState18","statCheckName","setStatCheckName","_useState19","_useState20","savingThrow","setSavingThrow","_useState21","_useState22","savingThrowName","setSavingThrowName","_useState23","_useState24","_useState25","_useState26","statCheckD20Roll","setStatCheckD20Roll","_useState27","_useState28","statCheckBonus","setStatCheckBonus","_useState29","_useState30","saveCheckD20Roll","setSaveCheckD20Roll","_useState31","_useState32","saveCheckBonus","setSaveCheckBonus","_useState33","_useState34","saveCheckProficency","setSaveCheckProficency","attackButton","action","totalDamage","allDamageArray","toHit","attack_bonus","damage_dice","damageCalc","damageType","finalDamage","split","desc","type","statCheckRoll","stat","savingThrowRoll","save","color","justifyContent","Components_Encounter","Components_AddToEncounterButton","Img","fluid","src","Title","Subtitle","walk","fly","burrow","swim","condition","typeOfDamage","str","dex","con","int","wis","char","athletics","acrobatics","sleight_of_hand","stealth","arcana","history","investigation","nature","religion","animal_handling","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","ability","Autocomplete","monsterButtons","setMonsterButtons","isLoading","inputRef","useRef","monsterNameArray","useEffect","_getMonsterName","asyncToGenerator","_regeneratorRuntime","mark","_callee","response1","data1","response2","data2","_i","response3","data3","_i2","response4","data4","_i3","response5","data5","_i4","response6","data6","_i5","response7","data7","_i6","response8","data8","_i7","response9","data9","_i8","response10","data10","_i9","response11","data11","_i10","response12","data12","_i11","response13","data13","_i12","response14","data14","_i13","response15","data15","_i14","response16","data16","_i15","response17","data17","_i16","response18","data18","_i17","response19","data19","_i18","response20","data20","_i19","response21","data21","_i20","response22","data22","_i21","wrap","_context","prev","next","fetch","sent","json","results","stop","apply","this","arguments","getMonsterName","inp","arr","currentFocus","addActive","x","classList","remove","removeActive","add","closeAllLists","elmnt","document","getElementsByClassName","parentNode","removeChild","addEventListener","e","b","val","value","setAttribute","appendChild","substr","toUpperCase","innerHTML","getElementsByTagName","getElementById","keyCode","preventDefault","click","target","autocomplete","ref","disabled","alert","allMonsterArray","allMonsterObj","Parent","setLoading","monsterData","setMonsterData","setName","setSize","setAlignment","setMonsterType","setArmor","setHP","setHitDice","setSpeed","setStats","setSkills","setSavingThrows","setActions","setLegendaryActions","setXP","setCR","_useState35","_useState36","setSenses","_useState37","_useState38","setLanguages","_useState39","_useState40","setSpecialAbilities","_useState41","_useState42","setConditionImmunities","_useState43","_useState44","setDamageImmunities","_useState45","_useState46","setDamageResistances","_useState47","_useState48","setDamageVulnerabilities","_useState49","_useState50","setIMG","_useState51","_useState52","_getData","Parent_regeneratorRuntime","k","getData","flexDirection","Components_Autocomplete","button","padding","armor_class","hit_points","hit_dice","strength","dexterity","constitution","intelligence","wisdom","charisma","strength_save","dexterity_save","constitution_save","intelligence_save","wisdom_save","charisma_save","legendary_actions","xp","challenge_rating","special_abilities","img_main","condition_immunities","damage_immunities","damage_resistances","damage_vulnerabilities","Components_Stats","App","Components_Parent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b3c85c51.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, ListGroup, Dropdown, DropdownButton, OverlayTrigger, Popover, Button } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction Encounter({ addToEncounterArray, setAddToEncounterArray }) {\r\n    const [condition, setCondition] = useState('Normal');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='customCard' style={{ width: '36rem', fontSize: '75%' }}>\r\n                <Card.Header as='h4' className='customCard'>Encounter</Card.Header>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {addToEncounterArray.map((monster, i) =>\r\n\r\n                        <ListGroup.Item key={i} style={{ border: 'solid', borderColor: 'black' }}>\r\n                            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                <Popover id=\"popover-basic\">\r\n                                    <Popover.Header as=\"h4\">Add to Encounter</Popover.Header>\r\n                                    <Popover.Body style={{ display: 'flex' }}>\r\n                                        Health: {monster.health}\r\n                                    </Popover.Body>\r\n                                </Popover>\r\n                            }>\r\n                                <Button variant=\"dark\" style={{ height: '2.5rem', width: '6.5rem', fontSize: '40%' }}>{monster.name}</Button>\r\n                            </OverlayTrigger>\r\n                            {/* <h6>{monster.name}</h6>\r\n                            < div style={{ display: 'flex', fontSize: '1rem' }}>\r\n                                Health: {monster.health} \r\n\r\n                            </div> */}\r\n                        </ListGroup.Item>\r\n                    )\r\n                    }\r\n                </div >\r\n            </Card >\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Encounter;","\r\nimport React from 'react';\r\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction AddToEncounterButton({ addToEncounterArray, setAddToEncounterArray, name, HP, hitDice }) {\r\n\r\n\r\n    function calculateHealth(dice, MaxOrRoll) {\r\n        let howManyDiceArray = [];\r\n        let typeOfDiceArray = [];\r\n        let additionArray = [];\r\n        let howManyDice = 0;\r\n        let typeOfDice = 0;\r\n        let addition = 0;\r\n        for (let j = 0; j < dice.length; j++) {\r\n            if (dice[j] === 'd') {\r\n                var leftOffJ = j + 1;\r\n                break;\r\n            } else {\r\n                howManyDiceArray.push(dice[j]);\r\n            }\r\n        }\r\n        howManyDice = howManyDiceArray.join('');\r\n\r\n        if (dice.includes('+') === true) {\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                if (dice[j] === '+') {\r\n                    leftOffJ = j + 1;\r\n                    break;\r\n                } else {\r\n                    typeOfDiceArray.push(dice[j]);\r\n                }\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n\r\n\r\n\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                additionArray.push(dice[j]);\r\n            }\r\n            addition = additionArray.join('');\r\n\r\n        } else {\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                typeOfDiceArray.push(dice[j]);\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n        }\r\n        if (MaxOrRoll === 'Max') {\r\n            return (parseInt(howManyDice, 10) * parseInt(typeOfDice, 10)) + parseInt(addition, 10);\r\n        }\r\n        else {\r\n            let hpcalc = 0;\r\n            for (let i = 0; i < howManyDice; i++) {\r\n                hpcalc += 1 + Math.floor(Math.random() * parseInt(typeOfDice, 10));\r\n                // console.log('damage roll', hpcalc);\r\n            }\r\n            let rolledHealth = 0;\r\n            if (addition) {\r\n                rolledHealth = parseInt(hpcalc, 10) + parseInt(addition, 10);\r\n                // console.log('addition', addition);\r\n            } else {\r\n                rolledHealth = hpcalc;\r\n            }\r\n            console.log('rolled health', rolledHealth);\r\n            return parseInt(rolledHealth);\r\n            // allDamageArray.push({health: rolledHealth, dice: action.damage_dice });\r\n\r\n\r\n            // for (let i = 0; i < allDamageArray.length; i++) {\r\n            //     let stringFix = parseInt(allDamageArray[i].damage, 10);\r\n            //     totalDamage += stringFix;\r\n            // }\r\n\r\n        }\r\n\r\n        console.log(howManyDice);\r\n        console.log(typeOfDice);\r\n        console.log(addition);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function addMonsterToEncounter(hp, hitdice, name, hpAmount) {\r\n        let health;\r\n        if (hpAmount === 'Max') {\r\n            // console.log(hitdice);\r\n            health = calculateHealth(hitdice, 'Max');\r\n        } else if (hpAmount === 'Roll') {\r\n            health = calculateHealth(hitdice, 'Roll');\r\n        } else {\r\n            health = hp;\r\n        }\r\n\r\n        let addedMonster = { name: name, health: health };\r\n        setAddToEncounterArray(current => [...current, addedMonster]);\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: '5px' }} >\r\n            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                <Popover id=\"popover-basic\">\r\n                    <Popover.Header as=\"h4\">Add to Encounter</Popover.Header>\r\n                    <Popover.Body style={{ display: 'flex' }}>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Max')} style={{ margin: '5px' }} variant='dark'>Max Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Roll')} style={{ margin: '5px' }} variant='dark'>Roll Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Average')} style={{ margin: '5px' }} variant='dark'>Average Health</Button>\r\n                    </Popover.Body>\r\n                </Popover>\r\n            }>\r\n                <Button variant=\"dark\" style={{ height: '2.5rem', width: '6.5rem', fontSize: '40%' }}>Add to Encounter</Button>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddToEncounterButton;","import \"../styles/statBlock.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Card, Button, ListGroup, Popover, OverlayTrigger, ListGroupItem } from 'react-bootstrap';\r\nimport Encounter from \"./Encounter\";\r\nimport AddToEncounterButton from \"./AddToEncounterButton\";\r\nfunction Stats({ data, name, size, alignment, monsterType, armor, HP, hitDice, speed, stats, skills, actions, legendaryActions, savingThrows, XP, CR, senses, languages, specialAbilities, conditionImmunities, damageImmunities, damageResistances, damageVulnerabilities, IMG }) {\r\n\r\n    const [d20, setD20] = useState();\r\n    const [hit, setHit] = useState();\r\n    const [attackBonus, setAttackBonus] = useState();\r\n    const [damage, setDamage] = useState([]);\r\n    const [damageTotal, setDamageTotal] = useState();\r\n    const [attackNameHit, setAttackNameHit] = useState();\r\n    const [attackNameDamage, setAttackNameDamage] = useState();\r\n    const [statCheck, setStatCheck] = useState();\r\n    const [statCheckName, setStatCheckName] = useState();\r\n    const [savingThrow, setSavingThrow] = useState();\r\n    const [savingThrowName, setSavingThrowName] = useState();\r\n    const [addToEncounterArray, setAddToEncounterArray] = useState([]);\r\n    const [statCheckD20Roll, setStatCheckD20Roll] = useState();\r\n    const [statCheckBonus, setStatCheckBonus] = useState();\r\n\r\n    const [saveCheckD20Roll, setSaveCheckD20Roll] = useState();\r\n    const [saveCheckBonus, setSaveCheckBonus] = useState();\r\n    const [saveCheckProficency, setSaveCheckProficency] = useState();\r\n\r\n\r\n    function attackButton(action) {\r\n        // console.log(action);\r\n        setAttackNameHit(action.name);\r\n        setAttackNameDamage(action.name);\r\n        let totalDamage = 0;\r\n        let allDamageArray = [];\r\n\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setD20(random);\r\n        let toHit = random + action.attack_bonus;\r\n        setAttackBonus(action.attack_bonus);\r\n        setHit(toHit);\r\n        // console.log(action.damage_dice.split(''));\r\n\r\n\r\n        let howManyDiceArray = [];\r\n        let typeOfDiceArray = [];\r\n        let additionArray = [];\r\n        let howManyDice = 0;\r\n        let typeOfDice = 0;\r\n        let addition = 0;\r\n        for (let j = 0; j < action.damage_dice.length; j++) {\r\n            if (action.damage_dice[j] === 'd') {\r\n                var leftOffJ = j + 1;\r\n                break;\r\n            } else {\r\n                howManyDiceArray.push(action.damage_dice[j]);\r\n            }\r\n        }\r\n        howManyDice = howManyDiceArray.join('');\r\n\r\n        if (action.damage_dice.includes('+') === true) {\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                if (action.damage_dice[j] === '+') {\r\n                    leftOffJ = j + 1;\r\n                    break;\r\n                } else {\r\n                    typeOfDiceArray.push(action.damage_dice[j]);\r\n                }\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n\r\n\r\n\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                additionArray.push(action.damage_dice[j]);\r\n            }\r\n            addition = additionArray.join('');\r\n\r\n\r\n\r\n        } else {\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                typeOfDiceArray.push(action.damage_dice[j]);\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n        }\r\n\r\n        let damageCalc = 0;\r\n        for (let i = 0; i < howManyDice; i++) {\r\n            damageCalc += 1 + Math.floor(Math.random() * parseInt(typeOfDice, 10));\r\n            // console.log('damage roll', damageCalc);\r\n        }\r\n        let finalDamage = 0;\r\n        if (addition) {\r\n            finalDamage = parseInt(damageCalc, 10) + parseInt(addition, 10);\r\n            // console.log('addition', addition);\r\n        } else {\r\n            finalDamage = damageCalc;\r\n        }\r\n        // console.log('final damage', finalDamage);\r\n        let damageType;\r\n        let split = action.desc.split(\" \");\r\n        for (let i = 0; i < split.length; i++) {\r\n            if (split[i] === \"damage\") {\r\n                damageType = split[i - 1];\r\n            }\r\n        }\r\n        allDamageArray.push({ damage: finalDamage, type: damageType, dice: action.damage_dice });\r\n\r\n\r\n        for (let i = 0; i < allDamageArray.length; i++) {\r\n            let stringFix = parseInt(allDamageArray[i].damage, 10);\r\n            totalDamage += stringFix;\r\n        }\r\n        setDamage(allDamageArray);\r\n        setDamageTotal(totalDamage);\r\n    }\r\n    function clearHitFunction() {\r\n        setAttackNameHit();\r\n        setD20();\r\n        setAttackBonus();\r\n        setHit();\r\n    }\r\n    function clearDamageFunction() {\r\n        setAttackNameDamage();\r\n        setDamage([]);\r\n        setDamageTotal();\r\n\r\n    }\r\n\r\n    function statCheckRoll(stat, name) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        console.log(stat);\r\n        setStatCheckName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setStatCheck(random + stat);\r\n        setStatCheckD20Roll(random);\r\n        setStatCheckBonus(stat);\r\n        // console.log('D20 Roll ', random, 'Stat Modifier: ', stat);\r\n    }\r\n    function savingThrowRoll(save, name, stat) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        setSavingThrowName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        if (save) {\r\n            setSavingThrow(random + save);\r\n            setSaveCheckBonus('Included in Proficency');\r\n            setSaveCheckProficency(save);\r\n            // console.log('D20 Roll: ', random, 'Proficency bonus: ', save);\r\n        } else {\r\n            setSavingThrow(random + stat);\r\n            setSaveCheckBonus(stat);\r\n            setSaveCheckProficency(\"None\");\r\n            // console.log('D20 Roll ', random, 'Stat Modifier: ', stat);\r\n        }\r\n        setSaveCheckD20Roll(random);\r\n    }\r\n\r\n    function clearStatRolls() {\r\n        setStatCheckName();\r\n        setStatCheckD20Roll();\r\n        setStatCheck();\r\n        setStatCheckBonus();\r\n    }\r\n    function clearSaveRolls() {\r\n        setSavingThrowName();\r\n        setSavingThrow();\r\n        setSaveCheckBonus();\r\n        setSaveCheckD20Roll();\r\n        setSaveCheckProficency();\r\n    }\r\n    return (\r\n        <div id=\"statBlock\" style={{ color: 'black' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{statCheckName} Stat Check: {statCheck}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5> D20 Roll: {statCheckD20Roll} </h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Stat Bonus: {statCheckBonus}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearStatRolls()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{savingThrowName} Saving Throw: {savingThrow} </Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>D20 Roll: {saveCheckD20Roll}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Stat Bonus: {saveCheckBonus}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Proficency Bonus: {saveCheckProficency} </h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearSaveRolls()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameHit} Hit: {hit}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>D20 Roll: {d20}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Attack Bonus: {attackBonus}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearHitFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameDamage} Damage: {damageTotal}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {damage.map((damage, i) =>\r\n                            <div key={i}>\r\n                                <ListGroup.Item variant=\"warning\"><h5>Damage {i + 1}: {damage.damage} {damage.type}</h5> ({damage.dice})</ListGroup.Item>\r\n                            </div>\r\n                        )}\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearDamageFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Encounter addToEncounterArray={addToEncounterArray} setAddToEncounterArray={setAddToEncounterArray} />\r\n            </div>\r\n            <br />\r\n\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <div>\r\n\r\n\r\n\r\n                        <AddToEncounterButton\r\n                            addToEncounterArray={addToEncounterArray}\r\n                            setAddToEncounterArray={setAddToEncounterArray}\r\n                            name={name}\r\n                            hitDice={hitDice}\r\n                            HP={HP}\r\n                        />\r\n\r\n                        <Card.Img fluid='true' variant=\"top\" src={IMG} style={{ width: '10rem' }} />\r\n\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{monsterType}, {size}, {alignment}\r\n                        </Card.Subtitle>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"> <h5>AC: {armor}</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h5> HP: {HP}  ({hitDice})</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\">\r\n                                <div id='speed' >\r\n                                    <h5>Speed:</h5>\r\n                                    {speed.walk ? <div style={{ fontSize: '50%' }}>Walk: {speed.walk}</div> : null}\r\n                                    {speed.fly ? <div style={{ fontSize: '50%' }}>Fly: {speed.fly}</div> : null}\r\n                                    {speed.burrow ? <div style={{ fontSize: '50%' }}>Burrow: {speed.burrow}</div> : null}\r\n                                    {speed.swim ? <div style={{ fontSize: '50%' }}>Swim: {speed.swim}</div> : null}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Info</Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>CR: {CR} - XP: {XP}</h6></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Senses:</h6>\r\n                                <p style={{ fontSize: '50%' }}>{senses}</p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\" style={{ fontSize: '50%' }}><h6>Languages:</h6> {languages} </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>Condition Immunities:</h6>\r\n                                {conditionImmunities.map((condition, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{condition.name}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Immunities:</h6>\r\n                                {damageImmunities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Resist:</h6>\r\n                                {damageResistances.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Vulnerabilities:</h6>\r\n                                {damageVulnerabilities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Stats</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.str, 'STR')}>STR: {stats.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.dex, 'DEX')}>DEX: {stats.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.con, 'CON')}>CON: {stats.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.int, 'INT')}>INT: {stats.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.wis, 'WIS')}>WIS: {stats.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.char, 'CHAR')}>CHAR: {stats.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {/* <div>Roll: {statCheck}</div> */}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Saving Throws</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.str, 'STR', stats.str)} variant=\"outline-dark\">STR: {savingThrows.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.dex, 'DEX', stats.dex)} variant=\"outline-dark\">DEX: {savingThrows.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.con, 'CON', stats.con)} variant=\"outline-dark\">CON: {savingThrows.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.int, 'INT', stats.int)} variant=\"outline-dark\">INT: {savingThrows.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.wis, 'WIS', stats.wis)} variant=\"outline-dark\">WIS: {savingThrows.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.char, 'CHAR', stats.char)} variant=\"outline-dark\">CHAR: {savingThrows.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '8rem' }}>\r\n                        <Card.Header as=\"h4\">Skills:</Card.Header>\r\n                        <ListGroup.Item variant=\"warning\">\r\n                            <div>\r\n                                {skills.athletics ? <div style={{ fontSize: '50%' }}>Athletics: {skills.athletics}</div> : null}\r\n                                {skills.acrobatics ? <div style={{ fontSize: '50%' }}>Acrobatics: {skills.acrobatics}</div> : null}\r\n                                {skills.sleight_of_hand ? <div style={{ fontSize: '50%' }}>Slight of Hand: {skills.sleight_of_hand}</div> : null}\r\n                                {skills.stealth ? <div style={{ fontSize: '50%' }}>Stealth: {skills.stealth}</div> : null}\r\n                                {skills.arcana ? <div style={{ fontSize: '50%' }}>Arcana: {skills.arcana}</div> : null}\r\n                                {skills.history ? <div style={{ fontSize: '50%' }}>History: {skills.history}</div> : null}\r\n                                {skills.investigation ? <div style={{ fontSize: '50%' }}>Investigation: {skills.investigation}</div> : null}\r\n                                {skills.nature ? <div style={{ fontSize: '50%' }}>Nature: {skills.nature}</div> : null}\r\n                                {skills.religion ? <div style={{ fontSize: '50%' }}>Religion: {skills.religion}</div> : null}\r\n                                {skills.animal_handling ? <div style={{ fontSize: '50%' }}>Animal Handling: {skills.animal_handling}</div> : null}\r\n                                {skills.insight ? <div style={{ fontSize: '50%' }}>Insight: {skills.insight}</div> : null}\r\n                                {skills.medicine ? <div style={{ fontSize: '50%' }}>Medicine: {skills.medicine}</div> : null}\r\n                                {skills.perception ? <div style={{ fontSize: '50%' }}>Perception: {skills.perception}</div> : null}\r\n                                {skills.survival ? <div style={{ fontSize: '50%' }}>Survival: {skills.survival}</div> : null}\r\n                                {skills.deception ? <div style={{ fontSize: '50%' }}>Deception: {skills.deception}</div> : null}\r\n                                {skills.intimidation ? <div style={{ fontSize: '50%' }}>Intimidation: {skills.intimidation}</div> : null}\r\n                                {skills.performance ? <div style={{ fontSize: '50%' }}>Performance: {skills.performance}</div> : null}\r\n                                {skills.persuasion ? <div style={{ fontSize: '50%' }}>Persuasion: {skills.persuasion}</div> : null}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '24rem' }}>\r\n                        <Card.Header as=\"h4\">Special Abilities:</Card.Header>\r\n                        <ListGroup>\r\n\r\n                            {specialAbilities ? specialAbilities.map((ability, i) =>\r\n                                <ListGroup.Item variant=\"warning\" key={i}>\r\n                                    <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                        <Popover id=\"popover-basic\">\r\n                                            <Popover.Header as=\"h3\">{ability.name}</Popover.Header>\r\n                                            <Popover.Body>\r\n                                                {ability.desc}\r\n                                                {ability.damage ?\r\n                                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                        <Button onClick={() => attackButton(ability)} variant=\"danger\" size=\"sm\">{ability.name}</Button>\r\n                                                    </div> : null}\r\n                                            </Popover.Body>\r\n                                        </Popover>\r\n                                    }>\r\n                                        <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{ability.name}</Button>\r\n                                    </OverlayTrigger>\r\n                                </ListGroup.Item>\r\n                            ) : null}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </div>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {actions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage_dice ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div>\r\n                                                : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Legendary Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {legendaryActions ? legendaryActions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div> : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        ) : null}\r\n                    </ListGroup>\r\n                </Card>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Stats;;;","\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../styles/autocomplete.css\";\r\nimport React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nfunction Autocomplete({ monsterButtons, setMonsterButtons, isLoading }) {\r\n    const inputRef = useRef(null);\r\n    var monsterNameArray = [];\r\n\r\n    useEffect(() => {\r\n        async function getMonsterName() {\r\n            const response1 = await fetch(`https://api.open5e.com/monsters/?page=1`);\r\n            let data1 = await response1.json();\r\n            for (let i = 0; i <= data1.results.length; i++) {\r\n                if (data1.results[i]) {\r\n                    monsterNameArray.push(data1.results[i].name);\r\n                }\r\n            }\r\n            const response2 = await fetch(`https://api.open5e.com/monsters/?page=2`);\r\n            let data2 = await response2.json();\r\n            for (let i = 0; i <= data2.results.length; i++) {\r\n                if (data2.results[i]) {\r\n                    monsterNameArray.push(data2.results[i].name);\r\n                }\r\n            }\r\n            const response3 = await fetch(`https://api.open5e.com/monsters/?page=3`);\r\n            let data3 = await response3.json();\r\n            for (let i = 0; i <= data3.results.length; i++) {\r\n                if (data3.results[i]) {\r\n                    monsterNameArray.push(data3.results[i].name);\r\n                }\r\n            }\r\n            const response4 = await fetch(`https://api.open5e.com/monsters/?page=4`);\r\n            let data4 = await response4.json();\r\n            for (let i = 0; i <= data4.results.length; i++) {\r\n                if (data4.results[i]) {\r\n                    monsterNameArray.push(data4.results[i].name);\r\n                }\r\n            }\r\n            const response5 = await fetch(`https://api.open5e.com/monsters/?page=5`);\r\n            let data5 = await response5.json();\r\n            for (let i = 0; i <= data5.results.length; i++) {\r\n                if (data5.results[i]) {\r\n                    monsterNameArray.push(data5.results[i].name);\r\n                }\r\n            }\r\n            const response6 = await fetch(`https://api.open5e.com/monsters/?page=6`);\r\n            let data6 = await response6.json();\r\n            for (let i = 0; i <= data6.results.length; i++) {\r\n                if (data6.results[i]) {\r\n                    monsterNameArray.push(data6.results[i].name);\r\n                }\r\n            }\r\n            const response7 = await fetch(`https://api.open5e.com/monsters/?page=7`);\r\n            let data7 = await response7.json();\r\n            for (let i = 0; i <= data7.results.length; i++) {\r\n                if (data7.results[i]) {\r\n                    monsterNameArray.push(data7.results[i].name);\r\n                }\r\n            }\r\n            const response8 = await fetch(`https://api.open5e.com/monsters/?page=8`);\r\n            let data8 = await response8.json();\r\n            for (let i = 0; i <= data8.results.length; i++) {\r\n                if (data8.results[i]) {\r\n                    monsterNameArray.push(data8.results[i].name);\r\n                }\r\n            }\r\n            const response9 = await fetch(`https://api.open5e.com/monsters/?page=9`);\r\n            let data9 = await response9.json();\r\n            for (let i = 0; i <= data9.results.length; i++) {\r\n                if (data9.results[i]) {\r\n                    monsterNameArray.push(data9.results[i].name);\r\n                }\r\n            }\r\n            const response10 = await fetch(`https://api.open5e.com/monsters/?page=10`);\r\n            let data10 = await response10.json();\r\n            for (let i = 0; i <= data10.results.length; i++) {\r\n                if (data10.results[i]) {\r\n                    monsterNameArray.push(data10.results[i].name);\r\n                }\r\n            }\r\n            const response11 = await fetch(`https://api.open5e.com/monsters/?page=11`);\r\n            let data11 = await response11.json();\r\n            for (let i = 0; i <= data11.results.length; i++) {\r\n                if (data11.results[i]) {\r\n                    monsterNameArray.push(data11.results[i].name);\r\n                }\r\n            }\r\n            const response12 = await fetch(`https://api.open5e.com/monsters/?page=12`);\r\n            let data12 = await response12.json();\r\n            for (let i = 0; i <= data12.results.length; i++) {\r\n                if (data12.results[i]) {\r\n                    monsterNameArray.push(data12.results[i].name);\r\n                }\r\n            }\r\n            const response13 = await fetch(`https://api.open5e.com/monsters/?page=13`);\r\n            let data13 = await response13.json();\r\n            for (let i = 0; i <= data13.results.length; i++) {\r\n                if (data13.results[i]) {\r\n                    monsterNameArray.push(data13.results[i].name);\r\n                }\r\n            }\r\n            const response14 = await fetch(`https://api.open5e.com/monsters/?page=14`);\r\n            let data14 = await response14.json();\r\n            for (let i = 0; i <= data14.results.length; i++) {\r\n                if (data14.results[i]) {\r\n                    monsterNameArray.push(data14.results[i].name);\r\n                }\r\n            }\r\n            const response15 = await fetch(`https://api.open5e.com/monsters/?page=15`);\r\n            let data15 = await response15.json();\r\n            for (let i = 0; i <= data15.results.length; i++) {\r\n                if (data15.results[i]) {\r\n                    monsterNameArray.push(data15.results[i].name);\r\n                }\r\n            }\r\n            const response16 = await fetch(`https://api.open5e.com/monsters/?page=16`);\r\n            let data16 = await response16.json();\r\n            for (let i = 0; i <= data16.results.length; i++) {\r\n                if (data16.results[i]) {\r\n                    monsterNameArray.push(data16.results[i].name);\r\n                }\r\n            }\r\n            const response17 = await fetch(`https://api.open5e.com/monsters/?page=17`);\r\n            let data17 = await response17.json();\r\n            for (let i = 0; i <= data17.results.length; i++) {\r\n                if (data17.results[i]) {\r\n                    monsterNameArray.push(data17.results[i].name);\r\n                }\r\n            }\r\n            const response18 = await fetch(`https://api.open5e.com/monsters/?page=18`);\r\n            let data18 = await response18.json();\r\n            for (let i = 0; i <= data18.results.length; i++) {\r\n                if (data18.results[i]) {\r\n                    monsterNameArray.push(data18.results[i].name);\r\n                }\r\n            }\r\n            const response19 = await fetch(`https://api.open5e.com/monsters/?page=19`);\r\n            let data19 = await response19.json();\r\n            for (let i = 0; i <= data19.results.length; i++) {\r\n                if (data19.results[i]) {\r\n                    monsterNameArray.push(data19.results[i].name);\r\n                }\r\n            }\r\n            const response20 = await fetch(`https://api.open5e.com/monsters/?page=20`);\r\n            let data20 = await response20.json();\r\n            for (let i = 0; i <= data20.results.length; i++) {\r\n                if (data20.results[i]) {\r\n                    monsterNameArray.push(data20.results[i].name);\r\n                }\r\n            }\r\n            const response21 = await fetch(`https://api.open5e.com/monsters/?page=21`);\r\n            let data21 = await response21.json();\r\n            for (let i = 0; i <= data21.results.length; i++) {\r\n                if (data21.results[i]) {\r\n                    monsterNameArray.push(data21.results[i].name);\r\n                }\r\n            }\r\n            const response22 = await fetch(`https://api.open5e.com/monsters/?page=22`);\r\n            let data22 = await response22.json();\r\n            for (let i = 0; i <= data22.results.length; i++) {\r\n                if (data22.results[i]) {\r\n                    monsterNameArray.push(data22.results[i].name);\r\n                }\r\n            }\r\n        };\r\n        getMonsterName();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    function addMonster() {\r\n        if (inputRef.current.value === '') {\r\n            alert('No Monster Entered in Input Box');\r\n        } else {\r\n            // console.log(inputRef.current.value);\r\n            setMonsterButtons((monsterButtons) => [...monsterButtons, inputRef.current.value]);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //this function creates the autocomplete functionality on the page\r\n        function autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"input\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                if (!val) { return false; }\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                /*for each item in the array...*/\r\n                for (i = 0; i < arr.length; i++) {\r\n                    /*check if the item starts with the same letters as the text field value:*/\r\n                    if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += arr[i].substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode === 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt !== x[i] && elmnt !== inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n        autocomplete(document.getElementById(\"myInput\"), monsterNameArray);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"centerform\">\r\n                <form id=\"form\" >\r\n                    <div className=\"autocomplete\" style={{ width: '300px' }}>\r\n                        <input ref={inputRef} id=\"myInput\" type=\"text\" name=\"mySpellList\" ></input>\r\n                    </div>\r\n                    <Button disabled={isLoading} onClick={() => addMonster()} variant='dark' id=\"submit\">{isLoading ? 'Loading Data...' : 'Add to Stat Block'}</Button>\r\n                </form>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Autocomplete;","import Stats from \"./Stats\";\r\nimport React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport Autocomplete from \"./Autocomplete\";\r\n\r\nvar allMonsterArray = [];\r\nvar allMonsterObj = {};\r\n\r\nfunction Parent() {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [monsterData, setMonsterData] = useState({});\r\n\r\n    const [name, setName] = useState();\r\n    const [size, setSize] = useState();\r\n    const [alignment, setAlignment] = useState();\r\n    const [monsterType, setMonsterType] = useState();\r\n    const [armor, setArmor] = useState();\r\n    const [HP, setHP] = useState();\r\n    const [hitDice, setHitDice] = useState();\r\n    const [speed, setSpeed] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [skills, setSkills] = useState({});\r\n    const [savingThrows, setSavingThrows] = useState({});\r\n    const [actions, setActions] = useState([]);\r\n    const [legendaryActions, setLegendaryActions] = useState([]);\r\n    const [XP, setXP] = useState();\r\n    const [CR, setCR] = useState();\r\n    const [senses, setSenses] = useState();\r\n    const [languages, setLanguages] = useState();\r\n    const [specialAbilities, setSpecialAbilities] = useState([]);\r\n    const [conditionImmunities, setConditionImmunities] = useState([]);\r\n    const [damageImmunities, setDamageImmunities] = useState([]);\r\n    const [damageResistances, setDamageResistances] = useState([]);\r\n    const [damageVulnerabilities, setDamageVulnerabilities] = useState([]);\r\n    const [IMG, setIMG] = useState();\r\n\r\n\r\n    const [monsterButtons, setMonsterButtons] = useState([]);\r\n    // const [monsterButtons, setMonsterButtons] = useState(['1']);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response1 = await fetch(`https://api.open5e.com/monsters/?page=1`);\r\n            let data1 = await response1.json();\r\n            for (let i = 0; i <= data1.results.length; i++) {\r\n                allMonsterArray.push(data1.results[i]);\r\n            }\r\n            const response2 = await fetch(`https://api.open5e.com/monsters/?page=2`);\r\n            let data2 = await response2.json();\r\n            for (let i = 0; i <= data2.results.length; i++) {\r\n                allMonsterArray.push(data2.results[i]);\r\n            }\r\n            const response3 = await fetch(`https://api.open5e.com/monsters/?page=3`);\r\n            let data3 = await response3.json();\r\n            for (let i = 0; i <= data3.results.length; i++) {\r\n                allMonsterArray.push(data3.results[i]);\r\n            }\r\n            const response4 = await fetch(`https://api.open5e.com/monsters/?page=4`);\r\n            let data4 = await response4.json();\r\n            for (let i = 0; i <= data4.results.length; i++) {\r\n                allMonsterArray.push(data4.results[i]);\r\n            }\r\n            const response5 = await fetch(`https://api.open5e.com/monsters/?page=5`);\r\n            let data5 = await response5.json();\r\n            for (let i = 0; i <= data5.results.length; i++) {\r\n                allMonsterArray.push(data5.results[i]);\r\n            }\r\n            const response6 = await fetch(`https://api.open5e.com/monsters/?page=6`);\r\n            let data6 = await response6.json();\r\n            for (let i = 0; i <= data6.results.length; i++) {\r\n                allMonsterArray.push(data6.results[i]);\r\n            }\r\n            const response7 = await fetch(`https://api.open5e.com/monsters/?page=7`);\r\n            let data7 = await response7.json();\r\n            for (let i = 0; i <= data7.results.length; i++) {\r\n                allMonsterArray.push(data7.results[i]);\r\n            }\r\n            const response8 = await fetch(`https://api.open5e.com/monsters/?page=8`);\r\n            let data8 = await response8.json();\r\n            for (let i = 0; i <= data8.results.length; i++) {\r\n                allMonsterArray.push(data8.results[i]);\r\n            }\r\n            const response9 = await fetch(`https://api.open5e.com/monsters/?page=9`);\r\n            let data9 = await response9.json();\r\n            for (let i = 0; i <= data9.results.length; i++) {\r\n                allMonsterArray.push(data9.results[i]);\r\n            }\r\n            const response10 = await fetch(`https://api.open5e.com/monsters/?page=10`);\r\n            let data10 = await response10.json();\r\n            for (let i = 0; i <= data10.results.length; i++) {\r\n                allMonsterArray.push(data10.results[i]);\r\n            }\r\n            const response11 = await fetch(`https://api.open5e.com/monsters/?page=11`);\r\n            let data11 = await response11.json();\r\n            for (let i = 0; i <= data11.results.length; i++) {\r\n                allMonsterArray.push(data11.results[i]);\r\n            }\r\n            const response12 = await fetch(`https://api.open5e.com/monsters/?page=12`);\r\n            let data12 = await response12.json();\r\n            for (let i = 0; i <= data12.results.length; i++) {\r\n                allMonsterArray.push(data12.results[i]);\r\n            }\r\n            const response13 = await fetch(`https://api.open5e.com/monsters/?page=13`);\r\n            let data13 = await response13.json();\r\n            for (let i = 0; i <= data13.results.length; i++) {\r\n                allMonsterArray.push(data13.results[i]);\r\n            }\r\n            const response14 = await fetch(`https://api.open5e.com/monsters/?page=14`);\r\n            let data14 = await response14.json();\r\n            for (let i = 0; i <= data14.results.length; i++) {\r\n                allMonsterArray.push(data14.results[i]);\r\n            }\r\n            const response15 = await fetch(`https://api.open5e.com/monsters/?page=15`);\r\n            let data15 = await response15.json();\r\n            for (let i = 0; i <= data15.results.length; i++) {\r\n                allMonsterArray.push(data15.results[i]);\r\n            }\r\n            const response16 = await fetch(`https://api.open5e.com/monsters/?page=16`);\r\n            let data16 = await response16.json();\r\n            for (let i = 0; i <= data16.results.length; i++) {\r\n                allMonsterArray.push(data16.results[i]);\r\n            }\r\n            const response17 = await fetch(`https://api.open5e.com/monsters/?page=17`);\r\n            let data17 = await response17.json();\r\n            for (let i = 0; i <= data17.results.length; i++) {\r\n                allMonsterArray.push(data17.results[i]);\r\n            }\r\n            const response18 = await fetch(`https://api.open5e.com/monsters/?page=18`);\r\n            let data18 = await response18.json();\r\n            for (let i = 0; i <= data18.results.length; i++) {\r\n                allMonsterArray.push(data18.results[i]);\r\n            }\r\n            const response19 = await fetch(`https://api.open5e.com/monsters/?page=19`);\r\n            let data19 = await response19.json();\r\n            for (let i = 0; i <= data19.results.length; i++) {\r\n                allMonsterArray.push(data19.results[i]);\r\n            }\r\n            const response20 = await fetch(`https://api.open5e.com/monsters/?page=20`);\r\n            let data20 = await response20.json();\r\n            for (let i = 0; i <= data20.results.length; i++) {\r\n                allMonsterArray.push(data20.results[i]);\r\n            }\r\n            const response21 = await fetch(`https://api.open5e.com/monsters/?page=21`);\r\n            let data21 = await response21.json();\r\n            for (let i = 0; i <= data21.results.length; i++) {\r\n                allMonsterArray.push(data21.results[i]);\r\n            }\r\n            const response22 = await fetch(`https://api.open5e.com/monsters/?page=22`);\r\n            let data22 = await response22.json();\r\n            for (let i = 0; i <= data22.results.length; i++) {\r\n                allMonsterArray.push(data22.results[i]);\r\n            }\r\n\r\n            for (let k = 0; k < allMonsterArray.length; k++) {\r\n                if (allMonsterArray[k]) {\r\n                    allMonsterObj[allMonsterArray[k].name] = allMonsterArray[k];\r\n                }\r\n            }\r\n            // console.log(Object.keys(allMonsterObj).length);\r\n            // console.log(allMonsterObj);\r\n            setMonsterData(allMonsterObj);\r\n            setLoading(false);\r\n        };\r\n        getData();\r\n    }, []);\r\n\r\n    function populateMonsterInfo(monster) {\r\n        setName(monster.name);\r\n        setSize(monster.size);\r\n        setAlignment(monster.alignment);\r\n        setMonsterType(monster.type);\r\n        setArmor(monster.armor_class);\r\n        setHP(monster.hit_points);\r\n        setHitDice(monster.hit_dice);\r\n        setSpeed(monster.speed);\r\n        setStats({ str: monster.strength, dex: monster.dexterity, con: monster.constitution, int: monster.intelligence, wis: monster.wisdom, char: monster.charisma });\r\n        setSkills(monster.skills);\r\n        setSavingThrows({ str: monster.strength_save, dex: monster.dexterity_save, con: monster.constitution_save, int: monster.intelligence_save, wis: monster.wisdom_save, char: monster.charisma_save });\r\n        setActions(monster.actions);\r\n        setLegendaryActions(monster.legendary_actions);\r\n        setXP(monster.xp);\r\n        setCR(monster.challenge_rating);\r\n        setSenses(monster.senses);\r\n        setLanguages(monster.languages);\r\n        setSpecialAbilities(monster.special_abilities);\r\n        setIMG(monster.img_main);\r\n        setConditionImmunities(monster.condition_immunities.split(','));\r\n        setDamageImmunities(monster.damage_immunities.split(','));\r\n        setDamageResistances(monster.damage_resistances.split(','));\r\n        setDamageVulnerabilities(monster.damage_vulnerabilities.split(','));\r\n    };\r\n\r\n    // function proficienciesLoop(proficienciesArray) {\r\n    //     for (let i = 0; i < proficienciesArray.length; i++) {\r\n    //         // console.log(proficienciesArray[i].value);\r\n    //         if (proficienciesArray[i].proficiency.name === 'Saving Throw: DEX') {\r\n    //             savingThrowObj['dex'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CON') {\r\n    //             savingThrowObj['con'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: WIS') {\r\n    //             savingThrowObj['wis'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CHA') {\r\n    //             savingThrowObj['char'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: INT') {\r\n    //             savingThrowObj['int'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: STR') {\r\n    //             savingThrowObj['str'] = proficienciesArray[i].value;\r\n    //         }\r\n    //     }\r\n    //     setSavingThrows(savingThrowObj);\r\n    // }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Autocomplete isLoading={isLoading} monsterButtons={monsterButtons} setMonsterButtons={setMonsterButtons} />\r\n            <br />\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                <Card className='customCard'>\r\n                    <Card.Header style={{ color: 'black' }}>Stat Block</Card.Header>\r\n                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                        {\r\n                            monsterButtons.map((button, i) =>\r\n                                <div key={i} style={{ padding: '5px' }}>\r\n                                    <Button onClick={() => populateMonsterInfo(allMonsterObj[button])} variant='dark' >{button}</Button>\r\n                                    {/* <Button variant='dark' >{button.name}</Button> */}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </Card>\r\n            </div >\r\n            <br />\r\n            <div >\r\n                <Stats\r\n                    // data={data}\r\n                    name={name}\r\n                    alignment={alignment}\r\n                    size={size}\r\n                    monsterType={monsterType}\r\n                    armor={armor}\r\n                    HP={HP}\r\n                    hitDice={hitDice}\r\n                    speed={speed}\r\n                    stats={stats}\r\n                    skills={skills}\r\n                    actions={actions}\r\n                    legendaryActions={legendaryActions}\r\n                    savingThrows={savingThrows}\r\n                    XP={XP}\r\n                    CR={CR}\r\n                    senses={senses}\r\n                    languages={languages}\r\n                    specialAbilities={specialAbilities}\r\n                    conditionImmunities={conditionImmunities}\r\n                    damageImmunities={damageImmunities}\r\n                    damageResistances={damageResistances}\r\n                    damageVulnerabilities={damageVulnerabilities}\r\n                    IMG={IMG}\r\n                    monsterData={monsterData}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parent;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Parent from './Components/Parent';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Parent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}