{"version":3,"sources":["Components/EncounterMonsterComponent.js","Components/Encounter.js","Components/AddToEncounterButton.js","Components/Stats.js","Components/Autocomplete.js","Components/Parent.js","App.js","reportWebVitals.js","index.js"],"names":["EncounterMonsterComponent","_ref","addToEncounterArray","setAddToEncounterArray","monster","_useState","i","useState","health","_useState2","Object","slicedToArray","setHealth","_useState3","_useState4","status","setStatus","_useState5","_useState6","statusButtonColor","setStatusButtonColor","_useState7","_useState8","monsterButtonColor","setMonsterButtonColor","sub","amount","add","useEffect","react_default","a","createElement","ListGroup","Item","style","border","borderColor","OverlayTrigger","trigger","placement","rootClose","overlay","Popover","id","Header","as","name","Body","display","flexDirection","justifyContent","Button","variant","height","width","fontSize","onClick","Dropdown","Toggle","drop","Menu","console","log","current","filter","monsterButton","Encounter","Card","className","flexWrap","map","Components_EncounterMonsterComponent","key","AddToEncounterButton","HP","hitDice","calculateHealth","dice","MaxOrRoll","howManyDice","howManyDiceArray","typeOfDiceArray","additionArray","typeOfDice","addition","j","length","leftOffJ","push","join","includes","parseInt","hpcalc","Math","floor","random","rolledHealth","addMonsterToEncounter","hp","hitdice","hpAmount","addedMonster","concat","toConsumableArray","margin","Stats","data","size","alignment","monsterType","armor","speed","stats","skills","actions","legendaryActions","savingThrows","XP","CR","senses","languages","specialAbilities","conditionImmunities","damageImmunities","damageResistances","damageVulnerabilities","IMG","d20","setD20","hit","setHit","attackBonus","setAttackBonus","damage","setDamage","_useState9","_useState10","damageTotal","setDamageTotal","_useState11","_useState12","attackNameHit","setAttackNameHit","_useState13","_useState14","attackNameDamage","setAttackNameDamage","_useState15","_useState16","statCheck","setStatCheck","_useState17","_useState18","statCheckName","setStatCheckName","_useState19","_useState20","savingThrow","setSavingThrow","_useState21","_useState22","savingThrowName","setSavingThrowName","_useState23","_useState24","_useState25","_useState26","statCheckD20Roll","setStatCheckD20Roll","_useState27","_useState28","statCheckBonus","setStatCheckBonus","_useState29","_useState30","saveCheckD20Roll","setSaveCheckD20Roll","_useState31","_useState32","saveCheckBonus","setSaveCheckBonus","_useState33","_useState34","saveCheckProficency","setSaveCheckProficency","attackButton","action","totalDamage","allDamageArray","toHit","attack_bonus","damage_dice","damageCalc","damageType","finalDamage","damage_bonus","split","desc","type","roll","bonus","statCheckRoll","stat","savingThrowRoll","save","color","Components_Encounter","Components_AddToEncounterButton","Img","fluid","src","Title","Subtitle","walk","fly","burrow","swim","condition","typeOfDamage","str","dex","con","int","wis","char","athletics","acrobatics","sleight_of_hand","stealth","arcana","history","investigation","nature","religion","animal_handling","insight","medicine","perception","survival","deception","intimidation","performance","persuasion","ability","Autocomplete","monsterButtons","setMonsterButtons","isLoading","inputRef","useRef","monsterNameArray","_getMonsterName","asyncToGenerator","_regeneratorRuntime","mark","_callee","response1","data1","response2","data2","_i","response3","data3","_i2","response4","data4","_i3","response5","data5","_i4","response6","data6","_i5","response7","data7","_i6","response8","data8","_i7","response9","data9","_i8","response10","data10","_i9","response11","data11","_i10","response12","data12","_i11","response13","data13","_i12","response14","data14","_i13","response15","data15","_i14","response16","data16","_i15","response17","data17","_i16","response18","data18","_i17","response19","data19","_i18","response20","data20","_i19","response21","data21","_i20","response22","data22","_i21","response23","data23","_i22","response24","data24","_i23","response25","data25","_i24","response26","data26","_i25","response27","data27","_i26","response28","data28","_i27","response29","data29","_i28","response30","data30","_i29","wrap","_context","prev","next","fetch","sent","json","results","stop","apply","this","arguments","getMonsterName","inp","arr","currentFocus","addActive","x","classList","remove","removeActive","closeAllLists","elmnt","document","getElementsByClassName","parentNode","removeChild","addEventListener","e","b","val","value","setAttribute","appendChild","substr","toUpperCase","innerHTML","getElementsByTagName","getElementById","keyCode","preventDefault","click","target","autocomplete","ref","disabled","alert","allMonsterArray","allMonsterObj","Parent","setLoading","monsterData","setMonsterData","setName","setSize","setAlignment","setMonsterType","setArmor","setHP","setHitDice","setSpeed","setStats","setSkills","setSavingThrows","setActions","setLegendaryActions","setXP","setCR","_useState35","_useState36","setSenses","_useState37","_useState38","setLanguages","_useState39","_useState40","setSpecialAbilities","_useState41","_useState42","setConditionImmunities","_useState43","_useState44","setDamageImmunities","_useState45","_useState46","setDamageResistances","_useState47","_useState48","setDamageVulnerabilities","_useState49","_useState50","setIMG","_useState51","_useState52","_getData","Parent_regeneratorRuntime","k","getData","Components_Autocomplete","button","padding","armor_class","hit_points","hit_dice","strength","dexterity","constitution","intelligence","wisdom","charisma","strength_save","dexterity_save","constitution_save","intelligence_save","wisdom_save","charisma_save","legendary_actions","xp","challenge_rating","special_abilities","img_main","condition_immunities","damage_immunities","damage_resistances","damage_vulnerabilities","Components_Stats","App","Components_Parent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","src_App"],"mappings":"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","file":"static/js/main.8b568cf1.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Card, ListGroup, Dropdown, DropdownButton, OverlayTrigger, Popover, Button } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction EncounterMonsterComponent({ addToEncounterArray, setAddToEncounterArray, monster, i }) {\r\n    const [health, setHealth] = useState(monster.health);\r\n    const [status, setStatus] = useState('Normal');\r\n    const [statusButtonColor, setStatusButtonColor] = useState('secondary');\r\n    const [monsterButtonColor, setMonsterButtonColor] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        if (status === \"Normal\") {\r\n            setStatusButtonColor('secondary');\r\n            setMonsterButtonColor('dark');\r\n        } else if (status === \"Frightened\" || status === \"Deafened\" || status === \"Paralyzed\") {\r\n            setStatusButtonColor('warning');\r\n            setMonsterButtonColor('warning');\r\n        } else if (status === \"Incapacitated\" || status === \"Unconscious\" || status === \"Exhaustion\") {\r\n            setStatusButtonColor('danger');\r\n            setMonsterButtonColor('danger');\r\n        } else if (status === \"Poisoned\" || status === \"Blinded\") {\r\n            setStatusButtonColor('success');\r\n            setMonsterButtonColor('success');\r\n        } else if (status === \"Petrified\" || status === \"Charmed\") {\r\n            setStatusButtonColor('info');\r\n            setMonsterButtonColor('info');\r\n        } else if (status === \"Prone\" || status === \"Grappled\" || status === \"Restrained\" || status === \"Stunned\") {\r\n            setStatusButtonColor('primary');\r\n            setMonsterButtonColor('primary');\r\n        } else if (status === \"Invisible\") {\r\n            setStatusButtonColor('');\r\n            setMonsterButtonColor('');\r\n        }\r\n    }, [status]);\r\n\r\n\r\n    function remove(id) {\r\n        console.log(id);\r\n        setAddToEncounterArray(current =>\r\n            current.filter(monsterButton => {\r\n                return monsterButton.id !== id;\r\n            }),\r\n        );\r\n    };\r\n    function sub(amount) {\r\n        if (amount === '1') {\r\n            setHealth(health - 1);\r\n        } else {\r\n            setHealth(health - 10);\r\n        }\r\n    }\r\n    function add(amount) {\r\n        if (amount === '1') {\r\n            setHealth(health + 1);\r\n        } else {\r\n            setHealth(health + 10);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <ListGroup.Item style={{ border: 'solid', borderColor: 'black' }}>\r\n                <OverlayTrigger trigger=\"click\" placement=\"auto\" rootClose='true' overlay={\r\n                    <Popover id=\"popover-basic\">\r\n                        <Popover.Header as=\"h4\">{monster.name}</Popover.Header>\r\n                        <Popover.Body style={{ display: 'flex', flexDirection: \"column\", justifyContent: 'space-evenly' }}>\r\n                            Health: {health}\r\n                            <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                <Button variant=\"dark\" style={{ height: '2rem', width: '2.7rem', fontSize: '60%' }} onClick={() => sub('1')}>-1</Button>\r\n                                <Button variant=\"dark\" style={{ height: '2rem', width: '2.7rem', fontSize: '60%' }} onClick={() => add('1')}>+1</Button>\r\n                            </div>\r\n                            <br />\r\n                            <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                <Button variant=\"dark\" style={{ height: '2rem', width: '2.7rem', fontSize: '60%' }} onClick={() => sub('10')}>-10</Button>\r\n                                <Button variant=\"dark\" style={{ height: '2rem', width: '2.7rem', fontSize: '60%' }} onClick={() => add('10')}>+10</Button>\r\n                            </div>\r\n                            <br />\r\n                            Status:\r\n                            <br />\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle drop='start' variant={statusButtonColor}>\r\n                                    {status}\r\n                                </Dropdown.Toggle>\r\n\r\n                                <Dropdown.Menu>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Normal')}>Normal</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Blinded')}>Blinded</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Charmed')}>Charmed</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Deafened')}>Deafened</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Frightened')}>Frightened</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Grappled')}>Grappled</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Incapacitated')}>Incapacitated</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Invisible')}>Invisible</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Paralyzed')}>Paralyzed</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Petrified')}>Petrified</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Poisoned')}>Poisoned</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Prone')}>Prone</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Restrained')}>Restrained</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Stunned')}>Stunned</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Unconscious')}>Unconscious</Dropdown.Item>\r\n                                    <Dropdown.Item style={{ fontSize: '60%' }} onClick={() => setStatus('Exhaustion')}>Exhaustion</Dropdown.Item>\r\n                                </Dropdown.Menu>\r\n                            </Dropdown>\r\n                            <br />\r\n                            <br />\r\n                            <Button variant=\"danger\" style={{ height: '1.5rem', width: '3.5rem', fontSize: '50%' }} onClick={() => remove(monster.id)}>Remove</Button>\r\n                        </Popover.Body>\r\n                    </Popover>\r\n                }>\r\n                    <Button variant={monsterButtonColor} style={{ height: '2.5rem', width: '6.5rem', fontSize: '70%' }}>{monster.name} {health}</Button>\r\n                </OverlayTrigger>\r\n            </ListGroup.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EncounterMonsterComponent;","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nimport EncounterMonsterComponent from './EncounterMonsterComponent';\r\nfunction Encounter({ addToEncounterArray, setAddToEncounterArray }) {\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='customCard' style={{ width: '36rem', fontSize: '75%' }}>\r\n                <Card.Header as='h4' className='customCard'>Encounter</Card.Header>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {addToEncounterArray.map((monster, i) =>\r\n                        <EncounterMonsterComponent key={i} addToEncounterArray={addToEncounterArray} setAddToEncounterArray={setAddToEncounterArray} monster={monster} i={i} />\r\n                    )\r\n                    }\r\n                </div >\r\n            </Card >\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Encounter;","\r\nimport React from 'react';\r\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction AddToEncounterButton({ addToEncounterArray, setAddToEncounterArray, name, HP, hitDice }) {\r\n\r\n\r\n    function calculateHealth(dice, MaxOrRoll) {\r\n        let howManyDiceArray = [];\r\n        let typeOfDiceArray = [];\r\n        let additionArray = [];\r\n        let howManyDice = 0;\r\n        let typeOfDice = 0;\r\n        let addition = 0;\r\n        for (let j = 0; j < dice.length; j++) {\r\n            if (dice[j] === 'd') {\r\n                var leftOffJ = j + 1;\r\n                break;\r\n            } else {\r\n                howManyDiceArray.push(dice[j]);\r\n            }\r\n        }\r\n        howManyDice = howManyDiceArray.join('');\r\n\r\n        if (dice.includes('+') === true) {\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                if (dice[j] === '+') {\r\n                    leftOffJ = j + 1;\r\n                    break;\r\n                } else {\r\n                    typeOfDiceArray.push(dice[j]);\r\n                }\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n\r\n\r\n\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                additionArray.push(dice[j]);\r\n            }\r\n            addition = additionArray.join('');\r\n\r\n        } else {\r\n            for (let j = leftOffJ; j < dice.length; j++) {\r\n                typeOfDiceArray.push(dice[j]);\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n        }\r\n        if (MaxOrRoll === 'Max') {\r\n            return (parseInt(howManyDice, 10) * parseInt(typeOfDice, 10)) + parseInt(addition, 10);\r\n        }\r\n        else {\r\n            let hpcalc = 0;\r\n            for (let i = 0; i < howManyDice; i++) {\r\n                hpcalc += 1 + Math.floor(Math.random() * parseInt(typeOfDice, 10));\r\n                // console.log('damage roll', hpcalc);\r\n            }\r\n            let rolledHealth = 0;\r\n            if (addition) {\r\n                rolledHealth = parseInt(hpcalc, 10) + parseInt(addition, 10);\r\n                // console.log('addition', addition);\r\n            } else {\r\n                rolledHealth = hpcalc;\r\n            }\r\n            console.log('rolled health', rolledHealth);\r\n            return parseInt(rolledHealth);\r\n            // allDamageArray.push({health: rolledHealth, dice: action.damage_dice });\r\n\r\n\r\n            // for (let i = 0; i < allDamageArray.length; i++) {\r\n            //     let stringFix = parseInt(allDamageArray[i].damage, 10);\r\n            //     totalDamage += stringFix;\r\n            // }\r\n\r\n        }\r\n\r\n        // console.log(howManyDice);\r\n        // console.log(typeOfDice);\r\n        // console.log(addition);\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    function addMonsterToEncounter(hp, hitdice, name, hpAmount) {\r\n        let health;\r\n        if (hpAmount === 'Max') {\r\n            // console.log(hitdice);\r\n            health = calculateHealth(hitdice, 'Max');\r\n        } else if (hpAmount === 'Roll') {\r\n            health = calculateHealth(hitdice, 'Roll');\r\n        } else {\r\n            health = hp;\r\n        }\r\n\r\n        let addedMonster = { name: name, health: health, id: Math.random() };\r\n        setAddToEncounterArray(current => [...current, addedMonster]);\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: '5px' }} >\r\n            <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"auto\" overlay={\r\n                <Popover id=\"popover-basic\">\r\n                    <Popover.Header as=\"h4\">Add to Encounter</Popover.Header>\r\n                    <Popover.Body style={{ display: 'flex' }}>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Max')} style={{ margin: '5px' }} variant='dark'>Max Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Roll')} style={{ margin: '5px' }} variant='dark'>Roll Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, hitDice, name, 'Average')} style={{ margin: '5px' }} variant='dark'>Average Health</Button>\r\n                    </Popover.Body>\r\n                </Popover>\r\n            }>\r\n                <Button variant=\"dark\" style={{ height: '2.5rem', width: '6.5rem', fontSize: '40%' }}>Add to Encounter</Button>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddToEncounterButton;","import \"../styles/statBlock.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Card, Button, ListGroup, Popover, OverlayTrigger, ListGroupItem } from 'react-bootstrap';\r\nimport Encounter from \"./Encounter\";\r\nimport AddToEncounterButton from \"./AddToEncounterButton\";\r\nfunction Stats({ data, name, size, alignment, monsterType, armor, HP, hitDice, speed, stats, skills, actions, legendaryActions, savingThrows, XP, CR, senses, languages, specialAbilities, conditionImmunities, damageImmunities, damageResistances, damageVulnerabilities, IMG }) {\r\n\r\n    const [d20, setD20] = useState();\r\n    const [hit, setHit] = useState();\r\n    const [attackBonus, setAttackBonus] = useState();\r\n    const [damage, setDamage] = useState([]);\r\n    const [damageTotal, setDamageTotal] = useState();\r\n    const [attackNameHit, setAttackNameHit] = useState();\r\n    const [attackNameDamage, setAttackNameDamage] = useState();\r\n    const [statCheck, setStatCheck] = useState();\r\n    const [statCheckName, setStatCheckName] = useState();\r\n    const [savingThrow, setSavingThrow] = useState();\r\n    const [savingThrowName, setSavingThrowName] = useState();\r\n    const [addToEncounterArray, setAddToEncounterArray] = useState([]);\r\n    const [statCheckD20Roll, setStatCheckD20Roll] = useState();\r\n    const [statCheckBonus, setStatCheckBonus] = useState();\r\n\r\n    const [saveCheckD20Roll, setSaveCheckD20Roll] = useState();\r\n    const [saveCheckBonus, setSaveCheckBonus] = useState();\r\n    const [saveCheckProficency, setSaveCheckProficency] = useState();\r\n\r\n\r\n    function attackButton(action) {\r\n        // console.log(action);\r\n        setAttackNameHit(action.name);\r\n        setAttackNameDamage(action.name);\r\n        let totalDamage = 0;\r\n        let allDamageArray = [];\r\n\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setD20(random);\r\n        let toHit = random + action.attack_bonus;\r\n        setAttackBonus(action.attack_bonus);\r\n        setHit(toHit);\r\n        // console.log(action.damage_dice.split(''));\r\n\r\n\r\n        let howManyDiceArray = [];\r\n        let typeOfDiceArray = [];\r\n        let additionArray = [];\r\n        let howManyDice = 0;\r\n        let typeOfDice = 0;\r\n        let addition = 0;\r\n        for (let j = 0; j < action.damage_dice.length; j++) {\r\n            if (action.damage_dice[j] === 'd') {\r\n                var leftOffJ = j + 1;\r\n                break;\r\n            } else {\r\n                howManyDiceArray.push(action.damage_dice[j]);\r\n            }\r\n        }\r\n        howManyDice = howManyDiceArray.join('');\r\n\r\n        if (action.damage_dice.includes('+') === true) {\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                if (action.damage_dice[j] === '+') {\r\n                    leftOffJ = j + 1;\r\n                    break;\r\n                } else {\r\n                    typeOfDiceArray.push(action.damage_dice[j]);\r\n                }\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n\r\n\r\n\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                additionArray.push(action.damage_dice[j]);\r\n            }\r\n            addition = additionArray.join('');\r\n\r\n\r\n\r\n        } else {\r\n            for (let j = leftOffJ; j < action.damage_dice.length; j++) {\r\n                typeOfDiceArray.push(action.damage_dice[j]);\r\n            }\r\n            typeOfDice = typeOfDiceArray.join('');\r\n        }\r\n\r\n        let damageCalc = 0;\r\n        for (let i = 0; i < howManyDice; i++) {\r\n            damageCalc += 1 + Math.floor(Math.random() * parseInt(typeOfDice, 10));\r\n            // console.log('damage roll', damageCalc);\r\n        }\r\n        let finalDamage = 0;\r\n        if (addition) {\r\n            finalDamage = parseInt(damageCalc, 10) + parseInt(addition, 10);\r\n            // console.log('addition', addition);\r\n        } if (action.damage_bonus) {\r\n            finalDamage = parseInt(damageCalc, 10) + parseInt(action.damage_bonus, 10);\r\n        } else {\r\n            finalDamage = damageCalc;\r\n        }\r\n        // console.log('final damage', finalDamage);\r\n        let damageType;\r\n        let split = action.desc.split(\" \");\r\n        for (let i = 0; i < split.length; i++) {\r\n            if (split[i] === \"damage\") {\r\n                damageType = split[i - 1];\r\n            }\r\n        }\r\n        allDamageArray.push({ damage: finalDamage, type: damageType, dice: action.damage_dice, roll: damageCalc, bonus: action.damage_bonus });\r\n\r\n\r\n        for (let i = 0; i < allDamageArray.length; i++) {\r\n            let stringFix = parseInt(allDamageArray[i].damage, 10);\r\n            totalDamage += stringFix;\r\n        }\r\n        setDamage(allDamageArray);\r\n        setDamageTotal(totalDamage);\r\n    }\r\n    function clearHitFunction() {\r\n        setAttackNameHit();\r\n        setD20();\r\n        setAttackBonus();\r\n        setHit();\r\n    }\r\n    function clearDamageFunction() {\r\n        setAttackNameDamage();\r\n        setDamage([]);\r\n        setDamageTotal();\r\n\r\n    }\r\n\r\n    function statCheckRoll(stat, name) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        console.log(stat);\r\n        setStatCheckName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setStatCheck(random + stat);\r\n        setStatCheckD20Roll(random);\r\n        setStatCheckBonus(stat);\r\n        // console.log('D20 Roll ', random, 'Stat Modifier: ', stat);\r\n    }\r\n    function savingThrowRoll(save, name, stat) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        setSavingThrowName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        if (save) {\r\n            setSavingThrow(random + save);\r\n            setSaveCheckBonus('Included in Proficency');\r\n            setSaveCheckProficency(save);\r\n            // console.log('D20 Roll: ', random, 'Proficency bonus: ', save);\r\n        } else {\r\n            setSavingThrow(random + stat);\r\n            setSaveCheckBonus(stat);\r\n            setSaveCheckProficency(\"None\");\r\n            // console.log('D20 Roll ', random, 'Stat Modifier: ', stat);\r\n        }\r\n        setSaveCheckD20Roll(random);\r\n    }\r\n\r\n    function clearStatRolls() {\r\n        setStatCheckName();\r\n        setStatCheckD20Roll();\r\n        setStatCheck();\r\n        setStatCheckBonus();\r\n    }\r\n    function clearSaveRolls() {\r\n        setSavingThrowName();\r\n        setSavingThrow();\r\n        setSaveCheckBonus();\r\n        setSaveCheckD20Roll();\r\n        setSaveCheckProficency();\r\n    }\r\n    return (\r\n        <div id=\"statBlock\" style={{ color: 'black' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{statCheckName} Stat Check: {statCheck}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5> D20 Roll: {statCheckD20Roll} </h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Stat Bonus: {statCheckBonus}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearStatRolls()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{savingThrowName} Saving Throw: {savingThrow} </Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>D20 Roll: {saveCheckD20Roll}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Stat Bonus: {saveCheckBonus}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Proficency Bonus: {saveCheckProficency} </h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearSaveRolls()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n\r\n\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameHit} Hit: {hit}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>D20 Roll: {d20}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Attack Bonus: {attackBonus}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearHitFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameDamage} Damage: {damageTotal}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {damage.map((damage, i) =>\r\n                            <div key={i}>\r\n                                <ListGroup.Item variant=\"warning\"><h5>Damage {i + 1}: Roll {damage.roll}  {damage.type}</h5> ({damage.dice}) <h5>Bonus {damage.bonus}</h5></ListGroup.Item>\r\n                            </div>\r\n                        )}\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearDamageFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Encounter addToEncounterArray={addToEncounterArray} setAddToEncounterArray={setAddToEncounterArray} />\r\n            </div>\r\n            <br />\r\n\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <div>\r\n\r\n\r\n\r\n                        <AddToEncounterButton\r\n                            addToEncounterArray={addToEncounterArray}\r\n                            setAddToEncounterArray={setAddToEncounterArray}\r\n                            name={name}\r\n                            hitDice={hitDice}\r\n                            HP={HP}\r\n                        />\r\n\r\n                        <Card.Img fluid='true' variant=\"top\" src={IMG} style={{ width: '10rem' }} />\r\n\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{monsterType}, {size}, {alignment}\r\n                        </Card.Subtitle>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"> <h5>AC: {armor}</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h5> HP: {HP}  ({hitDice})</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\">\r\n                                <div id='speed' >\r\n                                    <h5>Speed:</h5>\r\n                                    {speed.walk ? <div style={{ fontSize: '50%' }}>Walk: {speed.walk}</div> : null}\r\n                                    {speed.fly ? <div style={{ fontSize: '50%' }}>Fly: {speed.fly}</div> : null}\r\n                                    {speed.burrow ? <div style={{ fontSize: '50%' }}>Burrow: {speed.burrow}</div> : null}\r\n                                    {speed.swim ? <div style={{ fontSize: '50%' }}>Swim: {speed.swim}</div> : null}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Info</Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>CR: {CR} - XP: {XP}</h6></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Senses:</h6>\r\n                                <p style={{ fontSize: '50%' }}>{senses}</p>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\" style={{ fontSize: '50%' }}><h6>Languages:</h6> {languages} </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>Condition Immunities:</h6>\r\n                                {conditionImmunities.map((condition, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{condition.name}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Immunities:</h6>\r\n                                {damageImmunities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Resist:</h6>\r\n                                {damageResistances.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Vulnerabilities:</h6>\r\n                                {damageVulnerabilities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Stats</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.str, 'STR')}>STR: {stats.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.dex, 'DEX')}>DEX: {stats.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.con, 'CON')}>CON: {stats.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.int, 'INT')}>INT: {stats.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.wis, 'WIS')}>WIS: {stats.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.char, 'CHAR')}>CHAR: {stats.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {/* <div>Roll: {statCheck}</div> */}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Saving Throws</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.str, 'STR', stats.str)} variant=\"outline-dark\">STR: {savingThrows.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.dex, 'DEX', stats.dex)} variant=\"outline-dark\">DEX: {savingThrows.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.con, 'CON', stats.con)} variant=\"outline-dark\">CON: {savingThrows.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.int, 'INT', stats.int)} variant=\"outline-dark\">INT: {savingThrows.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.wis, 'WIS', stats.wis)} variant=\"outline-dark\">WIS: {savingThrows.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.char, 'CHAR', stats.char)} variant=\"outline-dark\">CHAR: {savingThrows.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '8rem' }}>\r\n                        <Card.Header as=\"h4\">Skills:</Card.Header>\r\n                        <ListGroup.Item variant=\"warning\">\r\n                            <div>\r\n                                {skills.athletics ? <div style={{ fontSize: '50%' }}>Athletics: {skills.athletics}</div> : null}\r\n                                {skills.acrobatics ? <div style={{ fontSize: '50%' }}>Acrobatics: {skills.acrobatics}</div> : null}\r\n                                {skills.sleight_of_hand ? <div style={{ fontSize: '50%' }}>Slight of Hand: {skills.sleight_of_hand}</div> : null}\r\n                                {skills.stealth ? <div style={{ fontSize: '50%' }}>Stealth: {skills.stealth}</div> : null}\r\n                                {skills.arcana ? <div style={{ fontSize: '50%' }}>Arcana: {skills.arcana}</div> : null}\r\n                                {skills.history ? <div style={{ fontSize: '50%' }}>History: {skills.history}</div> : null}\r\n                                {skills.investigation ? <div style={{ fontSize: '50%' }}>Investigation: {skills.investigation}</div> : null}\r\n                                {skills.nature ? <div style={{ fontSize: '50%' }}>Nature: {skills.nature}</div> : null}\r\n                                {skills.religion ? <div style={{ fontSize: '50%' }}>Religion: {skills.religion}</div> : null}\r\n                                {skills.animal_handling ? <div style={{ fontSize: '50%' }}>Animal Handling: {skills.animal_handling}</div> : null}\r\n                                {skills.insight ? <div style={{ fontSize: '50%' }}>Insight: {skills.insight}</div> : null}\r\n                                {skills.medicine ? <div style={{ fontSize: '50%' }}>Medicine: {skills.medicine}</div> : null}\r\n                                {skills.perception ? <div style={{ fontSize: '50%' }}>Perception: {skills.perception}</div> : null}\r\n                                {skills.survival ? <div style={{ fontSize: '50%' }}>Survival: {skills.survival}</div> : null}\r\n                                {skills.deception ? <div style={{ fontSize: '50%' }}>Deception: {skills.deception}</div> : null}\r\n                                {skills.intimidation ? <div style={{ fontSize: '50%' }}>Intimidation: {skills.intimidation}</div> : null}\r\n                                {skills.performance ? <div style={{ fontSize: '50%' }}>Performance: {skills.performance}</div> : null}\r\n                                {skills.persuasion ? <div style={{ fontSize: '50%' }}>Persuasion: {skills.persuasion}</div> : null}\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '24rem' }}>\r\n                        <Card.Header as=\"h4\">Special Abilities:</Card.Header>\r\n                        <ListGroup>\r\n\r\n                            {specialAbilities ? specialAbilities.map((ability, i) =>\r\n                                <ListGroup.Item variant=\"warning\" key={i}>\r\n                                    <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"auto\" overlay={\r\n                                        <Popover id=\"popover-basic\">\r\n                                            <Popover.Header as=\"h3\">{ability.name}</Popover.Header>\r\n                                            <Popover.Body>\r\n                                                {ability.desc}\r\n                                                {ability.damage ?\r\n                                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                        <Button onClick={() => attackButton(ability)} variant=\"danger\" size=\"sm\">{ability.name}</Button>\r\n                                                    </div> : null}\r\n                                            </Popover.Body>\r\n                                        </Popover>\r\n                                    }>\r\n                                        <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{ability.name}</Button>\r\n                                    </OverlayTrigger>\r\n                                </ListGroup.Item>\r\n                            ) : null}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </div>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {actions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"auto\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage_dice ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div>\r\n                                                : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Legendary Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {legendaryActions ? legendaryActions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger rootClose='true' trigger=\"click\" placement=\"auto\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div> : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        ) : null}\r\n                    </ListGroup>\r\n                </Card>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Stats;;;","\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../styles/autocomplete.css\";\r\nimport React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nfunction Autocomplete({ monsterButtons, setMonsterButtons, isLoading }) {\r\n    const inputRef = useRef(null);\r\n    var monsterNameArray = [];\r\n\r\n    useEffect(() => {\r\n        async function getMonsterName() {\r\n            const response1 = await fetch(`https://api.open5e.com/monsters/?page=1`);\r\n            let data1 = await response1.json();\r\n            for (let i = 0; i <= data1.results.length; i++) {\r\n                if (data1.results[i]) {\r\n                    monsterNameArray.push(data1.results[i].name);\r\n                }\r\n            }\r\n            const response2 = await fetch(`https://api.open5e.com/monsters/?page=2`);\r\n            let data2 = await response2.json();\r\n            for (let i = 0; i <= data2.results.length; i++) {\r\n                if (data2.results[i]) {\r\n                    monsterNameArray.push(data2.results[i].name);\r\n                }\r\n            }\r\n            const response3 = await fetch(`https://api.open5e.com/monsters/?page=3`);\r\n            let data3 = await response3.json();\r\n            for (let i = 0; i <= data3.results.length; i++) {\r\n                if (data3.results[i]) {\r\n                    monsterNameArray.push(data3.results[i].name);\r\n                }\r\n            }\r\n            const response4 = await fetch(`https://api.open5e.com/monsters/?page=4`);\r\n            let data4 = await response4.json();\r\n            for (let i = 0; i <= data4.results.length; i++) {\r\n                if (data4.results[i]) {\r\n                    monsterNameArray.push(data4.results[i].name);\r\n                }\r\n            }\r\n            const response5 = await fetch(`https://api.open5e.com/monsters/?page=5`);\r\n            let data5 = await response5.json();\r\n            for (let i = 0; i <= data5.results.length; i++) {\r\n                if (data5.results[i]) {\r\n                    monsterNameArray.push(data5.results[i].name);\r\n                }\r\n            }\r\n            const response6 = await fetch(`https://api.open5e.com/monsters/?page=6`);\r\n            let data6 = await response6.json();\r\n            for (let i = 0; i <= data6.results.length; i++) {\r\n                if (data6.results[i]) {\r\n                    monsterNameArray.push(data6.results[i].name);\r\n                }\r\n            }\r\n            const response7 = await fetch(`https://api.open5e.com/monsters/?page=7`);\r\n            let data7 = await response7.json();\r\n            for (let i = 0; i <= data7.results.length; i++) {\r\n                if (data7.results[i]) {\r\n                    monsterNameArray.push(data7.results[i].name);\r\n                }\r\n            }\r\n            const response8 = await fetch(`https://api.open5e.com/monsters/?page=8`);\r\n            let data8 = await response8.json();\r\n            for (let i = 0; i <= data8.results.length; i++) {\r\n                if (data8.results[i]) {\r\n                    monsterNameArray.push(data8.results[i].name);\r\n                }\r\n            }\r\n            const response9 = await fetch(`https://api.open5e.com/monsters/?page=9`);\r\n            let data9 = await response9.json();\r\n            for (let i = 0; i <= data9.results.length; i++) {\r\n                if (data9.results[i]) {\r\n                    monsterNameArray.push(data9.results[i].name);\r\n                }\r\n            }\r\n            const response10 = await fetch(`https://api.open5e.com/monsters/?page=10`);\r\n            let data10 = await response10.json();\r\n            for (let i = 0; i <= data10.results.length; i++) {\r\n                if (data10.results[i]) {\r\n                    monsterNameArray.push(data10.results[i].name);\r\n                }\r\n            }\r\n            const response11 = await fetch(`https://api.open5e.com/monsters/?page=11`);\r\n            let data11 = await response11.json();\r\n            for (let i = 0; i <= data11.results.length; i++) {\r\n                if (data11.results[i]) {\r\n                    monsterNameArray.push(data11.results[i].name);\r\n                }\r\n            }\r\n            const response12 = await fetch(`https://api.open5e.com/monsters/?page=12`);\r\n            let data12 = await response12.json();\r\n            for (let i = 0; i <= data12.results.length; i++) {\r\n                if (data12.results[i]) {\r\n                    monsterNameArray.push(data12.results[i].name);\r\n                }\r\n            }\r\n            const response13 = await fetch(`https://api.open5e.com/monsters/?page=13`);\r\n            let data13 = await response13.json();\r\n            for (let i = 0; i <= data13.results.length; i++) {\r\n                if (data13.results[i]) {\r\n                    monsterNameArray.push(data13.results[i].name);\r\n                }\r\n            }\r\n            const response14 = await fetch(`https://api.open5e.com/monsters/?page=14`);\r\n            let data14 = await response14.json();\r\n            for (let i = 0; i <= data14.results.length; i++) {\r\n                if (data14.results[i]) {\r\n                    monsterNameArray.push(data14.results[i].name);\r\n                }\r\n            }\r\n            const response15 = await fetch(`https://api.open5e.com/monsters/?page=15`);\r\n            let data15 = await response15.json();\r\n            for (let i = 0; i <= data15.results.length; i++) {\r\n                if (data15.results[i]) {\r\n                    monsterNameArray.push(data15.results[i].name);\r\n                }\r\n            }\r\n            const response16 = await fetch(`https://api.open5e.com/monsters/?page=16`);\r\n            let data16 = await response16.json();\r\n            for (let i = 0; i <= data16.results.length; i++) {\r\n                if (data16.results[i]) {\r\n                    monsterNameArray.push(data16.results[i].name);\r\n                }\r\n            }\r\n            const response17 = await fetch(`https://api.open5e.com/monsters/?page=17`);\r\n            let data17 = await response17.json();\r\n            for (let i = 0; i <= data17.results.length; i++) {\r\n                if (data17.results[i]) {\r\n                    monsterNameArray.push(data17.results[i].name);\r\n                }\r\n            }\r\n            const response18 = await fetch(`https://api.open5e.com/monsters/?page=18`);\r\n            let data18 = await response18.json();\r\n            for (let i = 0; i <= data18.results.length; i++) {\r\n                if (data18.results[i]) {\r\n                    monsterNameArray.push(data18.results[i].name);\r\n                }\r\n            }\r\n            const response19 = await fetch(`https://api.open5e.com/monsters/?page=19`);\r\n            let data19 = await response19.json();\r\n            for (let i = 0; i <= data19.results.length; i++) {\r\n                if (data19.results[i]) {\r\n                    monsterNameArray.push(data19.results[i].name);\r\n                }\r\n            }\r\n            const response20 = await fetch(`https://api.open5e.com/monsters/?page=20`);\r\n            let data20 = await response20.json();\r\n            for (let i = 0; i <= data20.results.length; i++) {\r\n                if (data20.results[i]) {\r\n                    monsterNameArray.push(data20.results[i].name);\r\n                }\r\n            }\r\n            const response21 = await fetch(`https://api.open5e.com/monsters/?page=21`);\r\n            let data21 = await response21.json();\r\n            for (let i = 0; i <= data21.results.length; i++) {\r\n                if (data21.results[i]) {\r\n                    monsterNameArray.push(data21.results[i].name);\r\n                }\r\n            }\r\n            const response22 = await fetch(`https://api.open5e.com/monsters/?page=22`);\r\n            let data22 = await response22.json();\r\n            for (let i = 0; i <= data22.results.length; i++) {\r\n                if (data22.results[i]) {\r\n                    monsterNameArray.push(data22.results[i].name);\r\n                }\r\n            }\r\n            const response23 = await fetch(`https://api.open5e.com/monsters/?page=23`);\r\n            let data23 = await response23.json();\r\n            for (let i = 0; i <= data23.results.length; i++) {\r\n                if (data23.results[i]) {\r\n                    monsterNameArray.push(data23.results[i].name);\r\n                }\r\n            }\r\n            const response24 = await fetch(`https://api.open5e.com/monsters/?page=24`);\r\n            let data24 = await response24.json();\r\n            for (let i = 0; i <= data24.results.length; i++) {\r\n                if (data24.results[i]) {\r\n                    monsterNameArray.push(data24.results[i].name);\r\n                }\r\n            }\r\n            const response25 = await fetch(`https://api.open5e.com/monsters/?page=25`);\r\n            let data25 = await response25.json();\r\n            for (let i = 0; i <= data25.results.length; i++) {\r\n                if (data25.results[i]) {\r\n                    monsterNameArray.push(data25.results[i].name);\r\n                }\r\n            }\r\n            const response26 = await fetch(`https://api.open5e.com/monsters/?page=26`);\r\n            let data26 = await response26.json();\r\n            for (let i = 0; i <= data26.results.length; i++) {\r\n                if (data26.results[i]) {\r\n                    monsterNameArray.push(data26.results[i].name);\r\n                }\r\n            }\r\n            const response27 = await fetch(`https://api.open5e.com/monsters/?page=27`);\r\n            let data27 = await response27.json();\r\n            for (let i = 0; i <= data27.results.length; i++) {\r\n                if (data27.results[i]) {\r\n                    monsterNameArray.push(data27.results[i].name);\r\n                }\r\n            }\r\n            const response28 = await fetch(`https://api.open5e.com/monsters/?page=28`);\r\n            let data28 = await response28.json();\r\n            for (let i = 0; i <= data28.results.length; i++) {\r\n                if (data28.results[i]) {\r\n                    monsterNameArray.push(data28.results[i].name);\r\n                }\r\n            }\r\n            const response29 = await fetch(`https://api.open5e.com/monsters/?page=29`);\r\n            let data29 = await response29.json();\r\n            for (let i = 0; i <= data29.results.length; i++) {\r\n                if (data29.results[i]) {\r\n                    monsterNameArray.push(data29.results[i].name);\r\n                }\r\n            }\r\n            const response30 = await fetch(`https://api.open5e.com/monsters/?page=30`);\r\n            let data30 = await response30.json();\r\n            for (let i = 0; i <= data30.results.length; i++) {\r\n                if (data30.results[i]) {\r\n                    monsterNameArray.push(data30.results[i].name);\r\n                }\r\n            }\r\n        };\r\n        getMonsterName();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    function addMonster() {\r\n        if (inputRef.current.value === '') {\r\n            alert('No Monster Entered in Input Box');\r\n        } else {\r\n            // console.log(inputRef.current.value);\r\n            setMonsterButtons((monsterButtons) => [...monsterButtons, inputRef.current.value]);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //this function creates the autocomplete functionality on the page\r\n        function autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"input\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                if (!val) { return false; }\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                /*for each item in the array...*/\r\n                for (i = 0; i < arr.length; i++) {\r\n                    /*check if the item starts with the same letters as the text field value:*/\r\n                    if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += arr[i].substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode === 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt !== x[i] && elmnt !== inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n        autocomplete(document.getElementById(\"myInput\"), monsterNameArray);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"centerform\">\r\n                <form id=\"form\" >\r\n                    <div className=\"autocomplete\" style={{ width: '300px' }}>\r\n                        <input ref={inputRef} id=\"myInput\" type=\"text\" name=\"mySpellList\" ></input>\r\n                    </div>\r\n                    <Button disabled={isLoading} onClick={() => addMonster()} variant='dark' id=\"submit\">{isLoading ? 'Loading Data...' : 'Add to Stat Block'}</Button>\r\n                </form>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Autocomplete;","import Stats from \"./Stats\";\r\nimport React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport Autocomplete from \"./Autocomplete\";\r\n\r\nvar allMonsterArray = [];\r\nvar allMonsterObj = {};\r\n\r\nfunction Parent() {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [monsterData, setMonsterData] = useState({});\r\n\r\n    const [name, setName] = useState();\r\n    const [size, setSize] = useState();\r\n    const [alignment, setAlignment] = useState();\r\n    const [monsterType, setMonsterType] = useState();\r\n    const [armor, setArmor] = useState();\r\n    const [HP, setHP] = useState();\r\n    const [hitDice, setHitDice] = useState();\r\n    const [speed, setSpeed] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [skills, setSkills] = useState({});\r\n    const [savingThrows, setSavingThrows] = useState({});\r\n    const [actions, setActions] = useState([]);\r\n    const [legendaryActions, setLegendaryActions] = useState([]);\r\n    const [XP, setXP] = useState();\r\n    const [CR, setCR] = useState();\r\n    const [senses, setSenses] = useState();\r\n    const [languages, setLanguages] = useState();\r\n    const [specialAbilities, setSpecialAbilities] = useState([]);\r\n    const [conditionImmunities, setConditionImmunities] = useState([]);\r\n    const [damageImmunities, setDamageImmunities] = useState([]);\r\n    const [damageResistances, setDamageResistances] = useState([]);\r\n    const [damageVulnerabilities, setDamageVulnerabilities] = useState([]);\r\n    const [IMG, setIMG] = useState();\r\n\r\n\r\n    const [monsterButtons, setMonsterButtons] = useState([]);\r\n    // const [monsterButtons, setMonsterButtons] = useState(['1']);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response1 = await fetch(`https://api.open5e.com/monsters/?page=1`);\r\n            let data1 = await response1.json();\r\n            for (let i = 0; i <= data1.results.length; i++) {\r\n                allMonsterArray.push(data1.results[i]);\r\n            }\r\n            const response2 = await fetch(`https://api.open5e.com/monsters/?page=2`);\r\n            let data2 = await response2.json();\r\n            for (let i = 0; i <= data2.results.length; i++) {\r\n                allMonsterArray.push(data2.results[i]);\r\n            }\r\n            const response3 = await fetch(`https://api.open5e.com/monsters/?page=3`);\r\n            let data3 = await response3.json();\r\n            for (let i = 0; i <= data3.results.length; i++) {\r\n                allMonsterArray.push(data3.results[i]);\r\n            }\r\n            const response4 = await fetch(`https://api.open5e.com/monsters/?page=4`);\r\n            let data4 = await response4.json();\r\n            for (let i = 0; i <= data4.results.length; i++) {\r\n                allMonsterArray.push(data4.results[i]);\r\n            }\r\n            const response5 = await fetch(`https://api.open5e.com/monsters/?page=5`);\r\n            let data5 = await response5.json();\r\n            for (let i = 0; i <= data5.results.length; i++) {\r\n                allMonsterArray.push(data5.results[i]);\r\n            }\r\n            const response6 = await fetch(`https://api.open5e.com/monsters/?page=6`);\r\n            let data6 = await response6.json();\r\n            for (let i = 0; i <= data6.results.length; i++) {\r\n                allMonsterArray.push(data6.results[i]);\r\n            }\r\n            const response7 = await fetch(`https://api.open5e.com/monsters/?page=7`);\r\n            let data7 = await response7.json();\r\n            for (let i = 0; i <= data7.results.length; i++) {\r\n                allMonsterArray.push(data7.results[i]);\r\n            }\r\n            const response8 = await fetch(`https://api.open5e.com/monsters/?page=8`);\r\n            let data8 = await response8.json();\r\n            for (let i = 0; i <= data8.results.length; i++) {\r\n                allMonsterArray.push(data8.results[i]);\r\n            }\r\n            const response9 = await fetch(`https://api.open5e.com/monsters/?page=9`);\r\n            let data9 = await response9.json();\r\n            for (let i = 0; i <= data9.results.length; i++) {\r\n                allMonsterArray.push(data9.results[i]);\r\n            }\r\n            const response10 = await fetch(`https://api.open5e.com/monsters/?page=10`);\r\n            let data10 = await response10.json();\r\n            for (let i = 0; i <= data10.results.length; i++) {\r\n                allMonsterArray.push(data10.results[i]);\r\n            }\r\n            const response11 = await fetch(`https://api.open5e.com/monsters/?page=11`);\r\n            let data11 = await response11.json();\r\n            for (let i = 0; i <= data11.results.length; i++) {\r\n                allMonsterArray.push(data11.results[i]);\r\n            }\r\n            const response12 = await fetch(`https://api.open5e.com/monsters/?page=12`);\r\n            let data12 = await response12.json();\r\n            for (let i = 0; i <= data12.results.length; i++) {\r\n                allMonsterArray.push(data12.results[i]);\r\n            }\r\n            const response13 = await fetch(`https://api.open5e.com/monsters/?page=13`);\r\n            let data13 = await response13.json();\r\n            for (let i = 0; i <= data13.results.length; i++) {\r\n                allMonsterArray.push(data13.results[i]);\r\n            }\r\n            const response14 = await fetch(`https://api.open5e.com/monsters/?page=14`);\r\n            let data14 = await response14.json();\r\n            for (let i = 0; i <= data14.results.length; i++) {\r\n                allMonsterArray.push(data14.results[i]);\r\n            }\r\n            const response15 = await fetch(`https://api.open5e.com/monsters/?page=15`);\r\n            let data15 = await response15.json();\r\n            for (let i = 0; i <= data15.results.length; i++) {\r\n                allMonsterArray.push(data15.results[i]);\r\n            }\r\n            const response16 = await fetch(`https://api.open5e.com/monsters/?page=16`);\r\n            let data16 = await response16.json();\r\n            for (let i = 0; i <= data16.results.length; i++) {\r\n                allMonsterArray.push(data16.results[i]);\r\n            }\r\n            const response17 = await fetch(`https://api.open5e.com/monsters/?page=17`);\r\n            let data17 = await response17.json();\r\n            for (let i = 0; i <= data17.results.length; i++) {\r\n                allMonsterArray.push(data17.results[i]);\r\n            }\r\n            const response18 = await fetch(`https://api.open5e.com/monsters/?page=18`);\r\n            let data18 = await response18.json();\r\n            for (let i = 0; i <= data18.results.length; i++) {\r\n                allMonsterArray.push(data18.results[i]);\r\n            }\r\n            const response19 = await fetch(`https://api.open5e.com/monsters/?page=19`);\r\n            let data19 = await response19.json();\r\n            for (let i = 0; i <= data19.results.length; i++) {\r\n                allMonsterArray.push(data19.results[i]);\r\n            }\r\n            const response20 = await fetch(`https://api.open5e.com/monsters/?page=20`);\r\n            let data20 = await response20.json();\r\n            for (let i = 0; i <= data20.results.length; i++) {\r\n                allMonsterArray.push(data20.results[i]);\r\n            }\r\n            const response21 = await fetch(`https://api.open5e.com/monsters/?page=21`);\r\n            let data21 = await response21.json();\r\n            for (let i = 0; i <= data21.results.length; i++) {\r\n                allMonsterArray.push(data21.results[i]);\r\n            }\r\n            const response22 = await fetch(`https://api.open5e.com/monsters/?page=22`);\r\n            let data22 = await response22.json();\r\n            for (let i = 0; i <= data22.results.length; i++) {\r\n                allMonsterArray.push(data22.results[i]);\r\n            }\r\n            const response23 = await fetch(`https://api.open5e.com/monsters/?page=23`);\r\n            let data23 = await response23.json();\r\n            for (let i = 0; i <= data23.results.length; i++) {\r\n                allMonsterArray.push(data23.results[i]);\r\n            }\r\n            const response24 = await fetch(`https://api.open5e.com/monsters/?page=24`);\r\n            let data24 = await response24.json();\r\n            for (let i = 0; i <= data24.results.length; i++) {\r\n                allMonsterArray.push(data24.results[i]);\r\n            }\r\n            const response25 = await fetch(`https://api.open5e.com/monsters/?page=25`);\r\n            let data25 = await response25.json();\r\n            for (let i = 0; i <= data25.results.length; i++) {\r\n                allMonsterArray.push(data25.results[i]);\r\n            }\r\n            const response26 = await fetch(`https://api.open5e.com/monsters/?page=26`);\r\n            let data26 = await response26.json();\r\n            for (let i = 0; i <= data26.results.length; i++) {\r\n                allMonsterArray.push(data26.results[i]);\r\n            }\r\n            const response27 = await fetch(`https://api.open5e.com/monsters/?page=27`);\r\n            let data27 = await response27.json();\r\n            for (let i = 0; i <= data27.results.length; i++) {\r\n                allMonsterArray.push(data27.results[i]);\r\n            }\r\n            const response28 = await fetch(`https://api.open5e.com/monsters/?page=28`);\r\n            let data28 = await response28.json();\r\n            for (let i = 0; i <= data28.results.length; i++) {\r\n                allMonsterArray.push(data28.results[i]);\r\n            }\r\n            const response29 = await fetch(`https://api.open5e.com/monsters/?page=29`);\r\n            let data29 = await response29.json();\r\n            for (let i = 0; i <= data29.results.length; i++) {\r\n                allMonsterArray.push(data29.results[i]);\r\n            }\r\n            const response30 = await fetch(`https://api.open5e.com/monsters/?page=30`);\r\n            let data30 = await response30.json();\r\n            for (let i = 0; i <= data30.results.length; i++) {\r\n                allMonsterArray.push(data30.results[i]);\r\n            }\r\n\r\n            for (let k = 0; k < allMonsterArray.length; k++) {\r\n                if (allMonsterArray[k]) {\r\n                    allMonsterObj[allMonsterArray[k].name] = allMonsterArray[k];\r\n                }\r\n            }\r\n            // console.log(Object.keys(allMonsterObj).length);\r\n            console.log(allMonsterObj);\r\n            setMonsterData(allMonsterObj);\r\n            setLoading(false);\r\n        };\r\n        getData();\r\n    }, []);\r\n\r\n    function populateMonsterInfo(monster) {\r\n        console.log(monster);\r\n        setName(monster.name);\r\n        setSize(monster.size);\r\n        setAlignment(monster.alignment);\r\n        setMonsterType(monster.type);\r\n        setArmor(monster.armor_class);\r\n        setHP(monster.hit_points);\r\n        setHitDice(monster.hit_dice);\r\n        setSpeed(monster.speed);\r\n        setStats({ str: monster.strength, dex: monster.dexterity, con: monster.constitution, int: monster.intelligence, wis: monster.wisdom, char: monster.charisma });\r\n        setSkills(monster.skills);\r\n        setSavingThrows({ str: monster.strength_save, dex: monster.dexterity_save, con: monster.constitution_save, int: monster.intelligence_save, wis: monster.wisdom_save, char: monster.charisma_save });\r\n        setActions(monster.actions);\r\n        setLegendaryActions(monster.legendary_actions);\r\n        setXP(monster.xp);\r\n        setCR(monster.challenge_rating);\r\n        setSenses(monster.senses);\r\n        setLanguages(monster.languages);\r\n        setSpecialAbilities(monster.special_abilities);\r\n        setIMG(monster.img_main);\r\n        setConditionImmunities(monster.condition_immunities.split(','));\r\n        setDamageImmunities(monster.damage_immunities.split(','));\r\n        setDamageResistances(monster.damage_resistances.split(','));\r\n        setDamageVulnerabilities(monster.damage_vulnerabilities.split(','));\r\n    };\r\n\r\n    // function proficienciesLoop(proficienciesArray) {\r\n    //     for (let i = 0; i < proficienciesArray.length; i++) {\r\n    //         // console.log(proficienciesArray[i].value);\r\n    //         if (proficienciesArray[i].proficiency.name === 'Saving Throw: DEX') {\r\n    //             savingThrowObj['dex'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CON') {\r\n    //             savingThrowObj['con'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: WIS') {\r\n    //             savingThrowObj['wis'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CHA') {\r\n    //             savingThrowObj['char'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: INT') {\r\n    //             savingThrowObj['int'] = proficienciesArray[i].value;\r\n    //         } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: STR') {\r\n    //             savingThrowObj['str'] = proficienciesArray[i].value;\r\n    //         }\r\n    //     }\r\n    //     setSavingThrows(savingThrowObj);\r\n    // }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Autocomplete isLoading={isLoading} monsterButtons={monsterButtons} setMonsterButtons={setMonsterButtons} />\r\n            <br />\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                <Card className='customCard'>\r\n                    <Card.Header style={{ color: 'black' }}>Stat Block</Card.Header>\r\n                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                        {\r\n                            monsterButtons.map((button, i) =>\r\n                                <div key={i} style={{ padding: '5px' }}>\r\n                                    <Button onClick={() => populateMonsterInfo(allMonsterObj[button])} variant='dark' >{button}</Button>\r\n                                    {/* <Button variant='dark' >{button.name}</Button> */}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </Card>\r\n            </div >\r\n            <br />\r\n            <div >\r\n                <Stats\r\n                    // data={data}\r\n                    name={name}\r\n                    alignment={alignment}\r\n                    size={size}\r\n                    monsterType={monsterType}\r\n                    armor={armor}\r\n                    HP={HP}\r\n                    hitDice={hitDice}\r\n                    speed={speed}\r\n                    stats={stats}\r\n                    skills={skills}\r\n                    actions={actions}\r\n                    legendaryActions={legendaryActions}\r\n                    savingThrows={savingThrows}\r\n                    XP={XP}\r\n                    CR={CR}\r\n                    senses={senses}\r\n                    languages={languages}\r\n                    specialAbilities={specialAbilities}\r\n                    conditionImmunities={conditionImmunities}\r\n                    damageImmunities={damageImmunities}\r\n                    damageResistances={damageResistances}\r\n                    damageVulnerabilities={damageVulnerabilities}\r\n                    IMG={IMG}\r\n                    monsterData={monsterData}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parent;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Parent from './Components/Parent';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Parent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}