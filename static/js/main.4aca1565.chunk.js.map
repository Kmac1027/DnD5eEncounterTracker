{"version":3,"sources":["Components/Encounter.js","Components/AddToEncounterButton.js","Components/Stats.js","Components/Autocomplete.js","Components/Parent.js","App.js","reportWebVitals.js","index.js"],"names":["Encounter","_ref","addToEncounterArray","_useState","setAddToEncounterArray","useState","_useState2","Object","slicedToArray","condition","setCondition","react_default","a","createElement","Card","className","style","width","fontSize","Header","as","display","flexWrap","map","monster","i","ListGroup","Item","key","border","borderColor","name","health","DropdownButton","variant","size","id","title","Dropdown","onClick","AddToEncounterButton","HP","addMonsterToEncounter","addedMonster","current","concat","toConsumableArray","margin","OverlayTrigger","trigger","placement","overlay","Popover","Body","Button","height","Stats","data","alignment","monsterType","armor","hitDice","speed","stats","actions","legendaryActions","savingThrows","XP","CR","senses","languages","specialAbilities","conditionImmunities","damageImmunities","damageResistances","damageVulnerabilities","d20","setD20","_useState3","_useState4","hit","setHit","_useState5","_useState6","attackBonus","setAttackBonus","_useState7","_useState8","damage","setDamage","_useState9","_useState10","damageTotal","setDamageTotal","_useState11","_useState12","attackNameHit","setAttackNameHit","_useState13","_useState14","attackNameDamage","setAttackNameDamage","_useState15","_useState16","statCheck","setStatCheck","_useState17","_useState18","statCheckName","setStatCheckName","_useState19","_useState20","savingThrow","setSavingThrow","_useState21","_useState22","savingThrowName","setSavingThrowName","_useState23","_useState24","attackButton","action","totalDamage","allDamageArray","random","Math","floor","toHit","attack_bonus","length","howManyDice","howManyDiceArray","typeOfDiceArray","additionArray","typeOfDice","addition","j","damage_dice","leftOffJ","push","join","includes","damageCalc","parseInt","console","log","finalDamage","type","damage_type","dice","statCheckRoll","stat","savingThrowRoll","save","color","justifyContent","Components_Encounter","Components_AddToEncounterButton","Title","Subtitle","walk","fly","burrow","swim","blindsight","darkvision","passive_perception","typeOfDamage","str","dex","con","int","wis","char","ability","desc","Autocomplete","monsterButtons","setMonsterButtons","inputRef","useRef","monsterArray","monsterObj","monsterObjArray","useEffect","_getMonsterName","asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","fetch","sent","json","results","index","url","stop","apply","this","arguments","getMonsterName","inp","arr","currentFocus","addActive","x","classList","remove","removeActive","add","closeAllLists","elmnt","document","getElementsByClassName","parentNode","removeChild","addEventListener","e","b","val","value","setAttribute","appendChild","substr","toUpperCase","innerHTML","getElementsByTagName","getElementById","keyCode","preventDefault","click","target","autocomplete","ref","alert","savingThrowObj","Parent","setName","setSize","setAlignment","setMonsterType","setArmor","setHP","setHitDice","setSpeed","setStats","setSavingThrows","setActions","setLegendaryActions","_useState25","_useState26","setXP","_useState27","_useState28","setCR","_useState29","_useState30","setSenses","_useState31","_useState32","setLanguages","_useState33","_useState34","setSpecialAbilities","_useState35","_useState36","setConditionImmunities","_useState37","_useState38","setDamageImmunities","_useState39","_useState40","setDamageResistances","_useState41","_useState42","setDamageVulnerabilities","_useState43","_useState44","_getData","Parent_regeneratorRuntime","populateMonsterInfo","_x2","_populateMonsterInfo","_callee2","_context2","armor_class","hit_points","hit_dice","strength","dexterity","constitution","intelligence","wisdom","charisma","legendary_actions","xp","challenge_rating","special_abilities","condition_immunities","damage_immunities","damage_resistances","damage_vulnerabilities","proficienciesLoop","proficiencies","proficienciesArray","proficiency","flexDirection","Components_Autocomplete","button","padding","_x","getData","Components_Stats","App","Components_Parent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4aca1565.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, ListGroup, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction Encounter({ addToEncounterArray, setAddToEncounterArray }) {\r\n    const [condition, setCondition] = useState('Normal');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className='customCard' style={{ width: '36rem', fontSize: '75%' }}>\r\n                <Card.Header as='h4' className='customCard'>Encounter</Card.Header>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                    {addToEncounterArray.map((monster, i) =>\r\n\r\n                        <ListGroup.Item key={i} style={{ border: 'solid', borderColor: 'black' }}>\r\n                            <h6>{monster.name}</h6>\r\n                            < div style={{ display: 'flex', fontSize: '1rem' }}>\r\n                                Health: {monster.health} /\r\n                                Condition:<DropdownButton variant='warning' size=\"sm\" id=\"dropdown-basic-button\" title={condition}>\r\n                                    <Dropdown.Item onClick={() => setCondition('Poisoned')}>Poisoned</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => setCondition('Paralyzed')}>Paralyzed</Dropdown.Item>\r\n                                    <Dropdown.Item onClick={() => setCondition('Doomed')}>Doomed</Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </div>\r\n                        </ListGroup.Item>\r\n                    )\r\n                    }\r\n                </div >\r\n            </Card >\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Encounter;","\r\nimport React from 'react';\r\nimport { Card, Button, OverlayTrigger, Popover } from 'react-bootstrap';\r\nimport \"../styles/statBlock.css\";\r\nfunction AddToEncounterButton({ addToEncounterArray, setAddToEncounterArray, name, HP }) {\r\n\r\n    function addMonsterToEncounter(health, name) {\r\n        let addedMonster = { name: name, health: health };\r\n        setAddToEncounterArray(current => [...current, addedMonster]);\r\n    }\r\n\r\n    return (\r\n        <div style={{ margin: '5px' }} >\r\n            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                <Popover id=\"popover-basic\">\r\n                    <Popover.Header as=\"h4\">Add to Encounter</Popover.Header>\r\n                    <Popover.Body style={{ display: 'flex' }}>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, name)} style={{ margin: '5px' }} variant='dark'>Max Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, name)} style={{ margin: '5px' }} variant='dark'>Roll Health</Button>\r\n                        <Button onClick={() => addMonsterToEncounter(HP, name)} style={{ margin: '5px' }} variant='dark'>Average Health</Button>\r\n                    </Popover.Body>\r\n                </Popover>\r\n            }>\r\n                <Button variant=\"dark\" style={{ height: '2.5rem', width: '6.5rem', fontSize: '40%' }}>Add to Encounter</Button>\r\n            </OverlayTrigger>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddToEncounterButton;","import \"../styles/statBlock.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Card, Button, ListGroup, Popover, OverlayTrigger } from 'react-bootstrap';\r\nimport Encounter from \"./Encounter\";\r\nimport AddToEncounterButton from \"./AddToEncounterButton\";\r\nfunction Stats({ data, name, size, alignment, monsterType, armor, HP, hitDice, speed, stats, actions, legendaryActions, savingThrows, XP, CR, senses, languages, specialAbilities, conditionImmunities, damageImmunities, damageResistances, damageVulnerabilities }) {\r\n\r\n    const [d20, setD20] = useState();\r\n    const [hit, setHit] = useState();\r\n    const [attackBonus, setAttackBonus] = useState();\r\n    const [damage, setDamage] = useState([]);\r\n    const [damageTotal, setDamageTotal] = useState();\r\n    const [attackNameHit, setAttackNameHit] = useState();\r\n    const [attackNameDamage, setAttackNameDamage] = useState();\r\n    const [statCheck, setStatCheck] = useState();\r\n    const [statCheckName, setStatCheckName] = useState();\r\n    const [savingThrow, setSavingThrow] = useState();\r\n    const [savingThrowName, setSavingThrowName] = useState();\r\n    const [addToEncounterArray, setAddToEncounterArray] = useState([]);\r\n\r\n    function attackButton(action) {\r\n        setAttackNameHit(action.name);\r\n        setAttackNameDamage(action.name);\r\n        let totalDamage = 0;\r\n        let allDamageArray = [];\r\n\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setD20(random);\r\n        let toHit = random + action.attack_bonus;\r\n        setAttackBonus(action.attack_bonus);\r\n        setHit(toHit);\r\n\r\n        for (let i = 0; i < action.damage.length; i++) {\r\n            let howManyDiceArray = [];\r\n            let typeOfDiceArray = [];\r\n            let additionArray = [];\r\n            let howManyDice = 0;\r\n            let typeOfDice = 0;\r\n            let addition = 0;\r\n            for (let j = 0; j < action.damage[i].damage_dice.length; j++) {\r\n                if (action.damage[i].damage_dice[j] === 'd') {\r\n                    var leftOffJ = j + 1;\r\n                    break;\r\n                } else {\r\n                    howManyDiceArray.push(action.damage[i].damage_dice[j]);\r\n                }\r\n            }\r\n            howManyDice = howManyDiceArray.join('');\r\n\r\n\r\n\r\n            if (action.damage[i].damage_dice.includes('+') === true) {\r\n                for (let j = leftOffJ; j < action.damage[i].damage_dice.length; j++) {\r\n                    if (action.damage[i].damage_dice[j] === '+') {\r\n                        leftOffJ = j + 1;\r\n                        break;\r\n                    } else {\r\n                        typeOfDiceArray.push(action.damage[i].damage_dice[j]);\r\n                    }\r\n                }\r\n                typeOfDice = typeOfDiceArray.join('');\r\n\r\n\r\n\r\n                for (let j = leftOffJ; j < action.damage[i].damage_dice.length; j++) {\r\n                    additionArray.push(action.damage[i].damage_dice[j]);\r\n                }\r\n                addition = additionArray.join('');\r\n\r\n\r\n\r\n            } else {\r\n                for (let j = leftOffJ; j < action.damage[i].damage_dice.length; j++) {\r\n                    typeOfDiceArray.push(action.damage[i].damage_dice[j]);\r\n                }\r\n                typeOfDice = typeOfDiceArray.join('');\r\n            }\r\n\r\n            let damageCalc = 0;\r\n            for (let i = 0; i < howManyDice; i++) {\r\n                damageCalc += 1 + Math.floor(Math.random() * parseInt(typeOfDice, 10));\r\n                console.log('damage roll', damageCalc);\r\n            }\r\n            let finalDamage = 0;\r\n            if (addition) {\r\n                finalDamage = parseInt(damageCalc, 10) + parseInt(addition, 10);\r\n                console.log('addition', addition);\r\n            } else {\r\n                finalDamage = damageCalc;\r\n            }\r\n            console.log('final damage', finalDamage);\r\n            allDamageArray.push({ damage: finalDamage, type: action.damage[i].damage_type.name, dice: action.damage[i].damage_dice });\r\n\r\n        }\r\n        for (let i = 0; i < allDamageArray.length; i++) {\r\n            let stringFix = parseInt(allDamageArray[i].damage, 10);\r\n            totalDamage += stringFix;\r\n        }\r\n        setDamage(allDamageArray);\r\n        setDamageTotal(totalDamage);\r\n    }\r\n    function clearHitFunction() {\r\n        setAttackNameHit();\r\n        setD20();\r\n        setAttackBonus();\r\n        setHit();\r\n    }\r\n    function clearDamageFunction() {\r\n        setAttackNameDamage();\r\n        setDamage([]);\r\n        setDamageTotal();\r\n\r\n    }\r\n\r\n    function statCheckRoll(stat, name) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        console.log(stat);\r\n        setStatCheckName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        setStatCheck(random + stat);\r\n        console.log(stat, random);\r\n    }\r\n    function savingThrowRoll(save, name, stat) {\r\n        stat = Math.floor((stat - 10) / 2);\r\n        setSavingThrowName(name);\r\n        let random = 1 + Math.floor(Math.random() * 20);\r\n        if (save) {\r\n            setSavingThrow(random + save);\r\n            console.log('D20 Roll: ', random, 'Proficency bonus: ', save);\r\n        } else {\r\n            setSavingThrow(random + stat);\r\n            console.log('D20 Roll ', random, 'Stat Modifier: ', stat);\r\n        }\r\n    }\r\n\r\n    function clearStatRolls() {\r\n        setStatCheckName();\r\n        setSavingThrowName();\r\n        setStatCheck();\r\n        setSavingThrow();\r\n    }\r\n    return (\r\n        <div id=\"statBlock\" style={{ color: 'black' }}>\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>Checks/Saving Throws</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>{statCheckName} Check: {statCheck}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>{savingThrowName} Saving Throw: {savingThrow}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearStatRolls()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameHit} Hit: {hit}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item variant=\"warning\"><h5>D20 Roll: {d20}</h5></ListGroup.Item>\r\n                        <ListGroup.Item variant=\"warning\"><h5>Attack Bonus: {attackBonus}</h5></ListGroup.Item>\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearHitFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '18rem', fontSize: '75%' }}>\r\n                    <Card.Header as='h4'>{attackNameDamage} Damage: {damageTotal}</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {damage.map((damage, i) =>\r\n                            <div key={i}>\r\n                                <ListGroup.Item variant=\"warning\"><h5>Damage{i + 1}: {damage.damage} {damage.type}</h5> ({damage.dice})</ListGroup.Item>\r\n                            </div>\r\n                        )}\r\n                    </ListGroup>\r\n                    <div>\r\n                        <Button onClick={() => clearDamageFunction()} variant='dark' size=\"sm\" style={{ width: '5rem' }}>Clear</Button>\r\n                    </div>\r\n                </Card>\r\n                <Encounter addToEncounterArray={addToEncounterArray} setAddToEncounterArray={setAddToEncounterArray} />\r\n            </div>\r\n            <br />\r\n\r\n\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <div>\r\n\r\n\r\n\r\n                        <AddToEncounterButton\r\n                            addToEncounterArray={addToEncounterArray}\r\n                            setAddToEncounterArray={setAddToEncounterArray}\r\n                            name={name}\r\n                            HP={HP}\r\n                        />\r\n\r\n                        {/* <Card.Img fluid='true' variant=\"top\" src=\"ABD.jpeg\" style={{ width: '10rem' }} /> */}\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                    <Card.Body>\r\n                        <Card.Title>{name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted\">{monsterType}, {size}, {alignment}\r\n                        </Card.Subtitle>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"> <h5>AC: {armor}</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h5> HP: {HP}  ({hitDice})</h5></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\">\r\n                                <div id='speed' >\r\n                                    <h5>Speed:</h5>\r\n                                    {speed.walk ? <div style={{ fontSize: '50%' }}>Walk: {speed.walk}</div> : null}\r\n                                    {speed.fly ? <div style={{ fontSize: '50%' }}>Fly: {speed.fly}</div> : null}\r\n                                    {speed.burrow ? <div style={{ fontSize: '50%' }}>Burrow: {speed.burrow}</div> : null}\r\n                                    {speed.swim ? <div style={{ fontSize: '50%' }}>Swim: {speed.swim}</div> : null}\r\n                                </div>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Info</Card.Header>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>CR: {CR} - XP: {XP}</h6></ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Senses:</h6>\r\n                                {senses.blindsight ? <div style={{ fontSize: '50%' }}> Blindsight: {senses.blindsight}</div> : null}\r\n                                {senses.darkvision ? <div style={{ fontSize: '50%' }}>Darkvision: {senses.darkvision}</div> : null}\r\n                                {senses.passive_perception ? <div style={{ fontSize: '50%' }}>Passive Perception: {senses.passive_perception}</div> : null}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\" style={{ fontSize: '50%' }}><h6>Languages:</h6> {languages} </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item variant=\"warning\"><h6>Condition Immunities:</h6>\r\n                                {conditionImmunities.map((condition, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{condition.name}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Immunities:</h6>\r\n                                {damageImmunities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}</ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Resist:</h6>\r\n                                {damageResistances.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item variant=\"warning\"><h6>Damage Vulnerabilities:</h6>\r\n                                {damageVulnerabilities.map((typeOfDamage, i) =>\r\n                                    <p key={i} style={{ fontSize: '50%' }}>{typeOfDamage}</p>\r\n                                )}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </div>\r\n                <div>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Stats</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.str, 'STR')}>STR: {stats.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.dex, 'DEX')}>DEX: {stats.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.con, 'CON')}>CON: {stats.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.int, 'INT')}>INT: {stats.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.wis, 'WIS')}>WIS: {stats.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button variant='dark' onClick={() => statCheckRoll(stats.char, 'CHAR')}>CHAR: {stats.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                                {/* <div>Roll: {statCheck}</div> */}\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                    <Card className='customCard' style={{ width: '15rem', height: '16rem' }}>\r\n                        <Card.Header as=\"h4\">Saving Throws</Card.Header>\r\n                        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.str, 'STR', stats.str)} variant=\"outline-dark\">STR: {savingThrows.str}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.dex, 'DEX', stats.dex)} variant=\"outline-dark\">DEX: {savingThrows.dex}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.con, 'CON', stats.con)} variant=\"outline-dark\">CON: {savingThrows.con}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                            <div>\r\n                                <ListGroup>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.int, 'INT', stats.int)} variant=\"outline-dark\">INT: {savingThrows.int}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.wis, 'WIS', stats.wis)} variant=\"outline-dark\">WIS: {savingThrows.wis}</Button></ListGroup.Item>\r\n                                    <ListGroup.Item variant=\"warning\"><Button onClick={() => savingThrowRoll(savingThrows.char, 'CHAR', stats.char)} variant=\"outline-dark\">CHAR: {savingThrows.char}</Button></ListGroup.Item>\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n                </div>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Special Abilities:</Card.Header>\r\n                    <ListGroup>\r\n\r\n                        {specialAbilities.map((ability, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{ability.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {ability.desc}\r\n                                            {ability.damage ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(ability)} variant=\"danger\" size=\"sm\">{ability.name}</Button>\r\n                                                </div> : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{ability.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        )}\r\n\r\n                    </ListGroup>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {actions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div>\r\n                                                : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n                <Card className='customCard' style={{ width: '15rem', height: '32rem' }}>\r\n                    <Card.Header as=\"h4\">Legendary Actions</Card.Header>\r\n                    <ListGroup variant=\"flush\">\r\n                        {legendaryActions.map((action, i) =>\r\n                            <ListGroup.Item variant=\"warning\" key={i}>\r\n                                <OverlayTrigger trigger=\"click\" placement=\"left\" overlay={\r\n                                    <Popover id=\"popover-basic\">\r\n                                        <Popover.Header as=\"h3\">{action.name}</Popover.Header>\r\n                                        <Popover.Body>\r\n                                            {action.desc}\r\n                                            <br />\r\n                                            <br />\r\n                                            {action.damage ?\r\n                                                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                                    <Button onClick={() => attackButton(action)} variant=\"danger\" size=\"sm\">{action.name}</Button>\r\n                                                </div> : null}\r\n                                        </Popover.Body>\r\n                                    </Popover>\r\n                                }>\r\n                                    <Button variant=\"dark\" style={{ height: '3rem', width: '8rem', fontSize: '50%' }}>{action.name}</Button>\r\n                                </OverlayTrigger>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                    </ListGroup>\r\n                </Card>\r\n            </div >\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Stats;;;","\r\nimport { Button } from 'react-bootstrap';\r\nimport \"../styles/autocomplete.css\";\r\nimport React from 'react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nfunction Autocomplete({ monsterButtons, setMonsterButtons }) {\r\n    const inputRef = useRef(null);\r\n\r\n    var monsterArray = [];\r\n    var monsterObj = {};\r\n    var monsterObjArray = [];\r\n\r\n    useEffect(() => {\r\n        async function getMonsterName() {\r\n            const response = await fetch('https://www.dnd5eapi.co/api/monsters');\r\n            const data = await response.json();\r\n            for (let i = 0; i < data.results.length; i++) {\r\n\r\n                if (monsterArray.includes(data.results[i].name) === false) {\r\n                    monsterArray.push(data.results[i].name);\r\n                }\r\n                if (!monsterObj[data.results[i].name]) {\r\n                    monsterObj[data.results[i].name] = {\r\n                        index: data.results[i].index,\r\n                        name: data.results[i].name,\r\n                        url: data.results[i].url\r\n                    };\r\n                }\r\n            }\r\n            for (let key in monsterObj) {\r\n                monsterObjArray.push(monsterObj[key]);\r\n\r\n            }\r\n            // setMonsterButtons(monsterObjArray);\r\n        };\r\n        getMonsterName();\r\n    }, []);\r\n\r\n    function addMonster() {\r\n        if (inputRef.current.value === '') {\r\n            alert('No Monster Entered in Input Box');\r\n        } else {\r\n            // console.log(monsterObj[inputRef.current.value]);\r\n            setMonsterButtons(current => [...current, monsterObj[inputRef.current.value]]);\r\n            console.log(monsterButtons);\r\n            // inputRef.current.value;\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //this function creates the autocomplete functionality on the page\r\n        function autocomplete(inp, arr) {\r\n            /*the autocomplete function takes two arguments,\r\n            the text field element and an array of possible autocompleted values:*/\r\n            var currentFocus;\r\n            /*execute a function when someone writes in the text field:*/\r\n            inp.addEventListener(\"input\", function (e) {\r\n                var a, b, i, val = this.value;\r\n                /*close any already open lists of autocompleted values*/\r\n                closeAllLists();\r\n                if (!val) { return false; }\r\n                currentFocus = -1;\r\n                /*create a DIV element that will contain the items (values):*/\r\n                a = document.createElement(\"DIV\");\r\n                a.setAttribute(\"id\", this.id + \"autocomplete-list\");\r\n                a.setAttribute(\"class\", \"autocomplete-items\");\r\n                /*append the DIV element as a child of the autocomplete container:*/\r\n                this.parentNode.appendChild(a);\r\n                /*for each item in the array...*/\r\n                for (i = 0; i < arr.length; i++) {\r\n                    /*check if the item starts with the same letters as the text field value:*/\r\n                    if (arr[i].substr(0, val.length).toUpperCase() === val.toUpperCase()) {\r\n                        /*create a DIV element for each matching element:*/\r\n                        b = document.createElement(\"DIV\");\r\n                        /*make the matching letters bold:*/\r\n                        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\r\n                        b.innerHTML += arr[i].substr(val.length);\r\n                        /*insert a input field that will hold the current array item's value:*/\r\n                        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\r\n                        /*execute a function when someone clicks on the item value (DIV element):*/\r\n                        b.addEventListener(\"click\", function (e) {\r\n                            /*insert the value for the autocomplete text field:*/\r\n                            inp.value = this.getElementsByTagName(\"input\")[0].value;\r\n                            /*close the list of autocompleted values,\r\n                            (or any other open lists of autocompleted values:*/\r\n                            closeAllLists();\r\n                        });\r\n                        a.appendChild(b);\r\n                    }\r\n                }\r\n            });\r\n            /*execute a function presses a key on the keyboard:*/\r\n            inp.addEventListener(\"keydown\", function (e) {\r\n                var x = document.getElementById(this.id + \"autocomplete-list\");\r\n                if (x) x = x.getElementsByTagName(\"div\");\r\n                if (e.keyCode === 40) {\r\n                    /*If the arrow DOWN key is pressed,\r\n                    increase the currentFocus variable:*/\r\n                    currentFocus++;\r\n                    /*and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 38) { //up\r\n                    /*If the arrow UP key is pressed,\r\n                    decrease the currentFocus variable:*/\r\n                    currentFocus--;\r\n                    /*and and make the current item more visible:*/\r\n                    addActive(x);\r\n                } else if (e.keyCode === 13) {\r\n                    /*If the ENTER key is pressed, prevent the form from being submitted,*/\r\n                    e.preventDefault();\r\n                    if (currentFocus > -1) {\r\n                        /*and simulate a click on the \"active\" item:*/\r\n                        if (x) x[currentFocus].click();\r\n                    }\r\n                }\r\n            });\r\n            function addActive(x) {\r\n                /*a function to classify an item as \"active\":*/\r\n                if (!x) return false;\r\n                /*start by removing the \"active\" class on all items:*/\r\n                removeActive(x);\r\n                if (currentFocus >= x.length) currentFocus = 0;\r\n                if (currentFocus < 0) currentFocus = (x.length - 1);\r\n                /*add class \"autocomplete-active\":*/\r\n                x[currentFocus].classList.add(\"autocomplete-active\");\r\n            }\r\n            function removeActive(x) {\r\n                /*a function to remove the \"active\" class from all autocomplete items:*/\r\n                for (var i = 0; i < x.length; i++) {\r\n                    x[i].classList.remove(\"autocomplete-active\");\r\n                }\r\n            }\r\n            function closeAllLists(elmnt) {\r\n                /*close all autocomplete lists in the document,\r\n                except the one passed as an argument:*/\r\n                var x = document.getElementsByClassName(\"autocomplete-items\");\r\n                for (var i = 0; i < x.length; i++) {\r\n                    if (elmnt !== x[i] && elmnt !== inp) {\r\n                        x[i].parentNode.removeChild(x[i]);\r\n                    }\r\n                }\r\n            }\r\n            /*execute a function when someone clicks in the document:*/\r\n            document.addEventListener(\"click\", function (e) {\r\n                closeAllLists(e.target);\r\n            });\r\n        }\r\n\r\n        autocomplete(document.getElementById(\"myInput\"), monsterArray);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"centerform\">\r\n                <form id=\"form\">\r\n                    <div className=\"autocomplete\" style={{ width: '300px' }}>\r\n                        <input ref={inputRef} id=\"myInput\" type=\"text\" name=\"mySpellList\" ></input>\r\n                    </div>\r\n                    <Button onClick={addMonster} variant='dark' id=\"submit\">Add to Stat Block</Button>\r\n                </form>\r\n            </div>\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Autocomplete;","import Stats from \"./Stats\";\r\nimport React, { useState } from 'react';\r\n\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport Autocomplete from \"./Autocomplete\";\r\n\r\nvar data;\r\nvar data2;\r\nvar savingThrowObj = {};\r\nfunction Parent() {\r\n    const [name, setName] = useState();\r\n    const [size, setSize] = useState();\r\n    const [alignment, setAlignment] = useState();\r\n    const [monsterType, setMonsterType] = useState();\r\n    const [armor, setArmor] = useState();\r\n    const [HP, setHP] = useState();\r\n    const [hitDice, setHitDice] = useState();\r\n    const [speed, setSpeed] = useState({});\r\n    const [stats, setStats] = useState({});\r\n    const [savingThrows, setSavingThrows] = useState({});\r\n    const [actions, setActions] = useState([]);\r\n    const [legendaryActions, setLegendaryActions] = useState([]);\r\n    const [XP, setXP] = useState();\r\n    const [CR, setCR] = useState();\r\n    const [senses, setSenses] = useState({});\r\n    const [languages, setLanguages] = useState();\r\n    const [specialAbilities, setSpecialAbilities] = useState([]);\r\n    const [conditionImmunities, setConditionImmunities] = useState([]);\r\n    const [damageImmunities, setDamageImmunities] = useState([]);\r\n    const [damageResistances, setDamageResistances] = useState([]);\r\n    const [damageVulnerabilities, setDamageVulnerabilities] = useState([]);\r\n\r\n\r\n    const [monsterButtons, setMonsterButtons] = useState([]);\r\n    // const [monsterButtons, setMonsterButtons] = useState([{ index: 'bearded-devil', name: 'Bearded Devil', url: '/api/monsters/bearded-devil' }, { index: 'adult-blue-dragon', name: 'Adult Blue Dragon', url: '/api/monsters/adult-blue-dragon' }, { index: 'giant-badger', name: 'Giant Badger', url: '/api/monsters/giant-badger' }]);\r\n\r\n\r\n\r\n    async function getData(monster) {\r\n        // console.log(monster);\r\n        const response = await fetch(`https://www.dnd5eapi.co${monster.url}`);\r\n        data = await response.json();\r\n        populateMonsterInfo(data);\r\n        // console.log(data, 'this is the data');\r\n\r\n        // const response2 = await fetch(`https://www.dnd5eapi.co/api/monsters/druid`);\r\n        // data2 = await response2.json();\r\n        // console.log(data2);\r\n    }\r\n\r\n    async function populateMonsterInfo(data) {\r\n        // const response = await fetch('https://www.dnd5eapi.co/api/monsters/adult-blue-dragon');\r\n        // data = await response.json();\r\n        // console.log(data);\r\n        console.log(data);\r\n        setName(data.name);\r\n        setSize(data.size);\r\n        setAlignment(data.alignment);\r\n        setMonsterType(data.type);\r\n        setArmor(data.armor_class);\r\n        setHP(data.hit_points);\r\n        setHitDice(data.hit_dice);\r\n        setSpeed(data.speed);\r\n        setStats({ str: data.strength, dex: data.dexterity, con: data.constitution, int: data.intelligence, wis: data.wisdom, char: data.charisma });\r\n        setActions(data.actions);\r\n        setLegendaryActions(data.legendary_actions);\r\n        setXP(data.xp);\r\n        setCR(data.challenge_rating);\r\n        setSenses(data.senses);\r\n        setLanguages(data.languages);\r\n        setSpecialAbilities(data.special_abilities);\r\n        setConditionImmunities(data.condition_immunities);\r\n        setDamageImmunities(data.damage_immunities);\r\n        setDamageResistances(data.damage_resistances);\r\n        setDamageVulnerabilities(data.damage_vulnerabilities);\r\n        //function to loop through proficiencies and filter them into proper catogories\r\n        proficienciesLoop(data.proficiencies);\r\n    };\r\n\r\n    function proficienciesLoop(proficienciesArray) {\r\n        for (let i = 0; i < proficienciesArray.length; i++) {\r\n            // console.log(proficienciesArray[i].value);\r\n            if (proficienciesArray[i].proficiency.name === 'Saving Throw: DEX') {\r\n                savingThrowObj['dex'] = proficienciesArray[i].value;\r\n            } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CON') {\r\n                savingThrowObj['con'] = proficienciesArray[i].value;\r\n            } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: WIS') {\r\n                savingThrowObj['wis'] = proficienciesArray[i].value;\r\n            } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: CHA') {\r\n                savingThrowObj['char'] = proficienciesArray[i].value;\r\n            } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: INT') {\r\n                savingThrowObj['int'] = proficienciesArray[i].value;\r\n            } else if (proficienciesArray[i].proficiency.name === 'Saving Throw: STR') {\r\n                savingThrowObj['str'] = proficienciesArray[i].value;\r\n            }\r\n        }\r\n        setSavingThrows(savingThrowObj);\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <Autocomplete monsterButtons={monsterButtons} setMonsterButtons={setMonsterButtons} />\r\n            <br />\r\n            {/* <div>\r\n                <button onClick={() => getMonsterInfo()}>get</button>\r\n            </div> */}\r\n            <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                <Card className='customCard'>\r\n                    <Card.Header style={{ color: 'black' }}>Stat Block</Card.Header>\r\n                    <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'wrap', justifyContent: 'space-evenly' }}>\r\n                        {\r\n                            monsterButtons.map((button, i) =>\r\n                                <div key={i} style={{ padding: '5px' }}>\r\n                                    <Button onClick={() => getData(button)} variant='dark' >{button.name}</Button>\r\n                                    {/* <Button variant='dark' >{button.name}</Button> */}\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </Card>\r\n            </div >\r\n            <br />\r\n            <div >\r\n                <Stats\r\n                    data={data}\r\n                    name={name}\r\n                    alignment={alignment}\r\n                    size={size}\r\n                    monsterType={monsterType}\r\n                    armor={armor}\r\n                    HP={HP}\r\n                    hitDice={hitDice}\r\n                    speed={speed}\r\n                    stats={stats}\r\n                    actions={actions}\r\n                    legendaryActions={legendaryActions}\r\n                    savingThrows={savingThrows}\r\n                    XP={XP}\r\n                    CR={CR}\r\n                    senses={senses}\r\n                    languages={languages}\r\n                    specialAbilities={specialAbilities}\r\n                    conditionImmunities={conditionImmunities}\r\n                    damageImmunities={damageImmunities}\r\n                    damageResistances={damageResistances}\r\n                    damageVulnerabilities={damageVulnerabilities}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Parent;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Parent from './Components/Parent';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Parent />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}